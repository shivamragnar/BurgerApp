{"version":3,"sources":["hoc/AuxFolder/lax.js","Components/Logo/Logo.js","Components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","Components/Navigation/NavigationItems/NavigationItems.js","Components/UI/Backdrop/Backdrop.js","Components/Navigation/SideDrawer/SideDrawer.js","Components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.js","Components/Navigation/Toolbar/Toolbar.js","hoc/Layout/Layout.js","Components/Burger/BurgerIngredients/BurgerIngredients.js","Components/Burger/Burger.js","Components/Burger/BuildControls/BuildControl/BuildControl.js","Components/Burger/BuildControls/BuildControls.js","Components/UI/Modal/Modal.js","Components/UI/Button/Button.js","Components/Burger/OrderSummary/OrderSummary.js","axios-orders.js","Components/UI/Spinner/Spinner.js","hoc/withErrorHandler/withErrorHandler.js","store/action/auth.js","store/action/actionTypes.js","Containers/BurgurBuilder/BurgerBuilder.js","store/action/burgerBuilder.js","store/action/order.js","Components/Order/CheckOutSummary/CheckOutSummary.js","Components/UI/Input/Input.js","Containers/CheckOut/ContactData/ContactData.js","Containers/CheckOut/Checkout.js","Containers/Auth/Auth.js","Containers/Auth/Logout/Logout.js","Components/Order/Order.js","Containers/Orders/Orders.js","App.js","serviceWorker.js","store/utility.js","store/reducer/burgerBuilderReducer.js","store/reducer/order.js","store/reducer/auth.js","index.js","Components/Burger/BurgerIngredients/BurgerIngredients.css","Components/Navigation/SideDrawer/SideDrawer.css","Components/Burger/BuildControls/BuildControl/BuildControl.css","Components/UI/Input/Input.css","Components/Navigation/Toolbar/Toolbar.css","Components/Navigation/NavigationItems/NavigationItem/NavigationItem.css","Components/Burger/BuildControls/BuildControls.css","Components/UI/Button/Button.css","hoc/Layout/Layout.css","Assets/Images/logo.png","Components/Logo/Logo.css","Components/Navigation/NavigationItems/NavigationItems.css","Components/UI/Backdrop/Backdrop.css","Components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.css","Components/Burger/Burger.css","Components/UI/Modal/Modal.css","Components/UI/Spinner/Spinner.css","Components/Order/CheckOutSummary/CheckOutSummary.css","Containers/CheckOut/ContactData/ContactData.css","Containers/Auth/Auth.css","Components/Order/Order.css"],"names":["Aux","props","react_default","a","createElement","children","Logo","className","styles","src","BurgerLogo","alt","NavigationItem","NavLink","exact","activeClassName","active","to","link","NavigationItems","NavigationItems_NavigationItem_NavigationItem","isAuthenticated","Backdrop","show","onClick","clicked","Sidedrawer","classes","SideDrawer","close","open","lax","UI_Backdrop_Backdrop","join","Components_Logo_Logo","Navigation_NavigationItems_NavigationItems","isAuth","DrawerToggle","Toolbar","SideDrawer_DrawerToggle_DrawerToggle","toggle","DesktopOnly","Layout","state","showSideDrawer","SideDrawerDisplayHandler","_this","setState","SideDrawerToggleHandler","curr","Navigation_Toolbar_Toolbar","this","SideDrawer_SideDrawer","Content","Component","connect","auth","token","BurgerIngredients","ingredient","type","BreadBottom","BreadTop","Seeds1","Seeds2","Meat","Cheese","Salad","Bacon","Burger","transformedArray","Object","keys","ingredients","map","ingkey","toConsumableArray","Array","_","index","Burger_BurgerIngredients_BurgerIngredients","key","reduce","accumulator","concat","length","BuildControl","label","Less","removeIng","disabled","disable","More","addIng","controls","BuildControls","price","ctrl","BuildControls_BuildControl_BuildControl","addIngredient","removeIngredient","disableOrNot","OrderButton","purchasable","ordered","Modal","nextProps","nextState","modalClosed","style","transform","opacity","Button","btnType","OrderSummary","console","log","ingredientSummary","textTransform","UI_Button_Button","cancel","continue","instance","axios","create","baseURL","Spinner","loader","withErrorHandler","WrappedComponent","_Component","_class2","_getPrototypeOf2","classCallCheck","_len","arguments","args","_key","possibleConstructorReturn","getPrototypeOf","call","apply","error","errorConfirmedHandler","inherits","createClass","value","_this2","reqInterceptor","interceptors","request","use","req","resInterceptor","response","res","eject","UI_Modal_Modal","message","authSuccess","userId","logout","localStorage","removeItem","checkAuthTimeOut","expirationTime","dispatch","setTimeout","setAuthRedirectPath","path","BurgerBuilder","purchasing","purchasableHandler","sum","el","purchaseHandler","onSetAuthRedirectPath","history","push","modalHandler","purchaseContinueHandler","onInitPurchase","onInitIngredient","disabledInfo","objectSpread","ings","orderSummary","burger","UI_Spinner_Spinner","Components_Burger_Burger","Burger_BuildControls_BuildControls","onIngredientAdded","onIngredientRemoved","Burger_OrderSummary_OrderSummary","burgerBuilder","totalPrice","ingName","ingredientName","get","then","data","catch","burgerBuilderActions","CheckOutSummary","width","margin","success","Input","inputElement","InputElement","invalid","shouldValidate","touched","Invalid","elementtype","assign","elementConfig","onChange","change","options","option","displayValue","Label","ContactData","orderForm","name","elementType","placeholder","validation","required","valid","street","zipCode","minLength","maxLength","country","email","deliveryMethod","formIsValid","home","orderHandler","event","preventDefault","formData","formElementIdentifier","loading","orderData","onOrderBurger","onChangeHandler","inputElementIdentifier","updatedForm","updatedFormElement","target","checkValidity","isFormValid","rules","isValid","trim","redirect","Redirect","formElementsArray","id","config","form","onSubmit","formElement","UI_Input_Input","order","post","orderId","purchaseBurgerSuccess","purchaseBurgerFail","CheckOut","cancelButtonHandler","goBack","successButtonHandler","replace","summary","purchased","Order_CheckOutSummary_CheckOutSummary","Route","match","component","Auth","isEmail","password","isSignUp","inputChangeHandler","controlName","updatedControls","defineProperty","submitHandler","onAuth","switchAuthMode","prevState","buildingBurger","authRedirectPath","errorMessage","authRedirect","building","authData","returnSecureToken","url","expirationDate","Date","getTime","expiresIn","setItem","idToken","localId","err","actions","Logout","onLogout","Order","amount","ingOutput","ig","padding","border","boxSizing","Number","parseFloat","toFixed","Orders","onfetchOrders","orders","Components_Order_Order","queryParams","fetchedOrders","App","onCheckAuthState","routes","Switch","hoc_Layout_Layout","withRouter","getItem","Boolean","window","location","hostname","updateObject","oldObject","updatedProperties","initialState","INGREDIENT_PRICES","salad","bacon","meat","cheese","reducer","undefined","action","updatedIngredient","updatedState","updatedIng","updatedSt","setIngredient","fetchIngredient","purchaseInit","purchaseBurgerStart","newOrder","fetchOrderStart","fetchOrderSuccess","fetchOrderFail","authStart","authFail","authLogout","rootReducer","combineReducers","burgerBuilderReducer","orderReducer","authReducer","composeEnhancers","compose","stored","createStore","applyMiddleware","thunk","app","es","store","BrowserRouter","src_App","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","enable","Success","Danger","__webpack_require__","p","load2"],"mappings":"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","file":"static/js/main.6484ac56.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Aux = (props)=> (\r\n    <div>{props.children}</div>\r\n)\r\nexport default Aux","import React from 'react'\r\nimport BurgerLogo from '../../Assets/Images/logo.png'\r\nimport styles from './Logo.css'\r\nconst Logo = (props) =>(\r\n    <div className={styles.Logo}>\r\n        <img src={BurgerLogo} alt='BurgerLogo'></img>\r\n    </div>\r\n)\r\n\r\nexport default Logo","import React from 'react'\r\nimport styles from './NavigationItem.css'\r\nimport {NavLink} from 'react-router-dom'\r\n\r\n\r\nconst NavigationItem =(props) => (\r\n    \r\n    <li className={styles.NavigationItem}>\r\n        <NavLink exact={props.exact} activeClassName={styles.active} to={props.link}>{props.children}</NavLink>\r\n    </li>\r\n)\r\n\r\n\r\nexport default NavigationItem ","import React from 'react'\r\nimport NavigationItem from './NavigationItem/NavigationItem'\r\nimport styles from './NavigationItems.css'\r\n\r\nconst NavigationItems =(props) => (\r\n    <ul className={styles.NavigationItems}>\r\n        <NavigationItem link='/' exact>Burger Builder</NavigationItem>\r\n        {props.isAuthenticated ? <NavigationItem link='/orders'>Orders</NavigationItem> : null}\r\n        {props.isAuthenticated\r\n            ? <NavigationItem link='/logout' >Logout</NavigationItem>\r\n            : <NavigationItem link='/auth' >Authenticate</NavigationItem>}\r\n    </ul>\r\n)\r\n\r\n\r\nexport default NavigationItems ","import React from 'react'\r\n\r\nimport styles from './Backdrop.css'\r\n\r\nconst Backdrop = (props)=>(\r\n \r\n    props.show ? <div className={styles.Backdrop} onClick={props.clicked}></div> : null\r\n\r\n    )\r\nexport default Backdrop","import React from 'react'\r\nimport styles from './SideDrawer.css'\r\nimport Logo from '../../Logo/Logo'\r\nimport NavigationItems from '../NavigationItems/NavigationItems'\r\nimport Backdrop from '../../UI/Backdrop/Backdrop'\r\nimport Aux from '../../../hoc/AuxFolder/lax'\r\n\r\nconst Sidedrawer = (props) =>{\r\nlet classes = [styles.SideDrawer, styles.close]\r\nif(props.open){\r\n    classes = [styles.SideDrawer, styles.open]\r\n}\r\n    return(\r\n        <Aux>\r\n            <Backdrop show={props.open} clicked={props.close} />\r\n            <div className={classes.join(' ')} onClick={props.close}>\r\n                <div className={styles.Logo}>\r\n                    <Logo />\r\n                </div>\r\n                \r\n                <nav>\r\n                    <NavigationItems isAuthenticated={props.isAuth} />\r\n                </nav>\r\n            </div>\r\n        </Aux>\r\n        \r\n    )\r\n}\r\n\r\nexport default Sidedrawer\r\n","import React from 'react'\r\nimport styles from './DrawerToggle.css'\r\n\r\n\r\nconst DrawerToggle = (props) =>(\r\n    <div className={styles.DrawerToggle} onClick={props.clicked}>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n    </div>\r\n)\r\n\r\nexport default DrawerToggle","import React from 'react'\r\nimport styles from './Toolbar.css'\r\nimport Logo from '../../Logo/Logo'\r\nimport NavigationItems from '../NavigationItems/NavigationItems'\r\nimport DrawerToggle from '../SideDrawer/DrawerToggle/DrawerToggle'\r\n\r\n\r\nconst Toolbar = (props) =>(\r\n    <header className={styles.Toolbar}>\r\n        <DrawerToggle clicked={props.toggle}/>\r\n        <div className={styles.Logo}>\r\n            <Logo />\r\n        </div>\r\n        \r\n        <nav className={styles.DesktopOnly}>\r\n            <NavigationItems isAuthenticated={props.isAuth} />\r\n        </nav>\r\n    </header>\r\n)\r\n\r\nexport default Toolbar","import React, {Component} from 'react'\r\nimport Aux from '../AuxFolder/lax'\r\nimport styles from './Layout.css'\r\nimport SideDrawer from '../../Components/Navigation/SideDrawer/SideDrawer'\r\nimport Toolbar from '../../Components/Navigation/Toolbar/Toolbar'\r\nimport {connect} from 'react-redux'\r\nclass Layout extends Component {\r\n\r\n    state = {\r\n        showSideDrawer : true\r\n    }\r\n\r\n    SideDrawerDisplayHandler = () => {\r\n        this.setState({showSideDrawer:false})\r\n    }\r\n    SideDrawerToggleHandler = () => {\r\n        const curr = this.state.showSideDrawer\r\n        this.setState({showSideDrawer:!curr}) \r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <Aux>\r\n                <Toolbar isAuth={this.props.isAuthenticated} toggle={this.SideDrawerToggleHandler}/>\r\n                <SideDrawer isAuth={this.props.isAuthenticated} open={this.state.showSideDrawer} close={this.SideDrawerDisplayHandler} />\r\n                <main className = {styles.Content}>{this.props.children}</main>\r\n            </Aux>\r\n        \r\n        )\r\n    }\r\n   \r\n}\r\n    \r\nconst mapStateToProps =  state => {\r\n    return {\r\n        isAuthenticated : state.auth.token !== null\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps)(Layout) ","import React, {Component} from 'react'\r\n// import  './BurgerIngredients.css'\r\nimport classes from './BurgerIngredients.css'\r\nimport propTypes from 'prop-types'\r\n\r\nclass BurgerIngredients extends Component{\r\n\r\n    render(){\r\n        let ingredient = null\r\n\r\n        switch(this.props.type){\r\n\r\n            case ('Bread-Bottom') :\r\n            ingredient = <div className = {classes.BreadBottom}></div>\r\n            break\r\n\r\n            case('Bread-Top') :\r\n            ingredient = (\r\n                            <div className = {classes.BreadTop}>\r\n                                <div className = {classes.Seeds1}></div>\r\n                                <div className = {classes.Seeds2}></div>\r\n                            </div>\r\n            )\r\n            break\r\n\r\n            case ('meat') :\r\n            ingredient = <div className = {classes.Meat}></div>\r\n            break\r\n\r\n            case ('cheese') :\r\n            ingredient = <div className = {classes.Cheese}></div>\r\n            break\r\n\r\n            case ('salad') :\r\n            ingredient = <div className = {classes.Salad}></div>\r\n            break\r\n\r\n            case ('bacon') :\r\n            ingredient = <div className = {classes.Bacon}></div>\r\n            break\r\n\r\n            default :\r\n            ingredient = null\r\n\r\n        }\r\n        return ingredient\r\n    }\r\n\r\n}\r\n\r\n\r\nBurgerIngredients.propTypes = {\r\n    type : propTypes.string.isRequired\r\n}\r\n\r\nexport default BurgerIngredients","import React from 'react'\r\nimport styles from './Burger.css'\r\nimport BurgerIngredients from './BurgerIngredients/BurgerIngredients';\r\n\r\n\r\nconst Burger = (props) => {\r\n    \r\n   \r\n            \r\n    let transformedArray = Object.keys(props.ingredients)\r\n    .map(ingkey =>{\r\n        \r\n        return [...Array(props.ingredients[ingkey])]\r\n        .map( ( _ , index ) =>{ \r\n        return <BurgerIngredients key={ingkey + index} type={ingkey} />})\r\n        }).reduce((accumulator,curr)=>{return accumulator.concat(curr)},[])\r\n       \r\n    if (transformedArray.length===0 ){\r\n        transformedArray = <p>hey add some ingredients</p>\r\n    }\r\n   \r\n      \r\n\r\n    return(\r\n            <div className = {styles.Burger}>\r\n                <BurgerIngredients type = 'Bread-Top' />\r\n                {transformedArray}\r\n                <BurgerIngredients type = 'Bread-Bottom' />\r\n            </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Burger","import React from 'react'\r\nimport classes from './BuildControl.css'\r\n\r\nconst BuildControl = (props) => (\r\n <div className={classes.BuildControl}>\r\n    <div className={classes.label}>{props.label}</div>\r\n    <button className={classes.Less} onClick={props.removeIng} disabled={props.disable}>Less</button>\r\n    <button className={classes.More} onClick={props.addIng}>More</button>\r\n </div>\r\n)\r\n\r\nexport default BuildControl","import React from 'react'\r\nimport styles from './BuildControls.css'\r\nimport BuildControl from './BuildControl/BuildControl'\r\n \r\nconst controls = [\r\n    { label : 'salad', type : 'salad'},\r\n    { label : 'meat', type : 'meat'},\r\n    { label : 'bacon', type : 'bacon'},\r\n    { label : 'cheese', type : 'cheese'}\r\n]\r\n\r\nconst BuildControls = (props) => (\r\n    <div className={styles.BuildControls}>\r\n        <p>Total Price : {props.price}</p>\r\n        {controls.map((ctrl,index) =>(\r\n            <BuildControl \r\n                key={ctrl.label + index } \r\n                label={ctrl.label} \r\n                addIng={()=>props.addIngredient(ctrl.type)} \r\n                removeIng={()=>props.removeIngredient(ctrl.type)}\r\n                disable={props.disableOrNot[ctrl.type]}/>\r\n        ) )}\r\n        <button \r\n            className={styles.OrderButton} \r\n            disabled={!props.purchasable}\r\n            onClick={props.ordered}>{props.isAuth ? 'Order Now' : 'Sign Up to Order' }</button>\r\n\r\n    </div>\r\n)\r\n\r\nexport default BuildControls\r\n","import React, {Component} from 'react'\r\nimport styles from './Modal.css'\r\n\r\nimport Aux from '../../../hoc/AuxFolder/lax'\r\nimport Backdrop from '../Backdrop/Backdrop'\r\n\r\n\r\nclass Modal extends Component{\r\n\r\n    shouldComponentUpdate ( nextProps, nextState ) {\r\n        return nextProps.show !== this.props.show || nextProps.children !== this.props.children;\r\n    }\r\n\r\n    componentWillUpdate () {\r\n        \r\n    }\r\n\r\n    render(){\r\n        \r\n        return(\r\n            <Aux >\r\n                <Backdrop show={this.props.show} clicked={this.props.modalClosed}/>\r\n                <div \r\n                    className={styles.Modal}\r\n                    style = {{\r\n                        transform : this.props.show ? 'translateY(0)' : 'translateY(-100vh)',\r\n                        opacity : this.props.show ? '1' : '0.0'\r\n                    }}\r\n                >\r\n                \r\n                {this.props.children}\r\n                </div>\r\n            </Aux>\r\n        )\r\n    }\r\n} \r\n\r\nexport default Modal","import React from 'react'\r\nimport styles from './Button.css'\r\n\r\nconst Button = (props) =>(\r\n    <button \r\n        disabled={props.disabled}\r\n        className={[styles.Button, styles[props.btnType]].join(' ')}\r\n        onClick = {props.clicked}>{props.children}</button>\r\n\r\n)\r\n\r\nexport default Button","import React, {Component} from 'react'\r\nimport Aux from '../../../hoc/AuxFolder/lax'\r\nimport Button from '../../UI/Button/Button'\r\n\r\nclass OrderSummary extends Component{\r\n\r\n    componentWillUpdate(){\r\n        console.log('[OrderSummary] is updated')\r\n    }\r\n\r\n    render(){\r\n        const ingredientSummary = Object.keys(this.props.ingredients).map(ingkey=>{\r\n            return (<li key={ingkey}><span style={{textTransform:\"capitalize\"}}>{ingkey} </span>: {this.props.ingredients[ingkey]}</li>)\r\n        })\r\n\r\n        return(\r\n            <Aux>\r\n                <h3>Hii...You have selected a Delicious Order</h3>\r\n                <p>Here are the ingredients</p>\r\n                <ul>\r\n                    {ingredientSummary}\r\n                </ul>\r\n                <p><strong>Total Amount : {this.props.price}</strong></p>\r\n                <p>Continue to Checkout</p>\r\n                <Button btnType='Danger' clicked={this.props.cancel}>CANCEL</Button>\r\n                <Button btnType='Success' clicked={this.props.continue}>CONTINUE</Button>\r\n            </Aux>\r\n\r\n        )\r\n    }\r\n} \r\n\r\nexport default OrderSummary","import axios from 'axios'\r\n\r\nconst instance = axios.create({\r\n    baseURL : 'https://myburger-builder.firebaseio.com/'\r\n})\r\n\r\nexport default instance","import React from 'react'\r\nimport styles from './Spinner.css'\r\n\r\nconst Spinner = () => (\r\n\r\n    <div className={styles.loader}>Loading...</div>\r\n)\r\n\r\nexport default Spinner","import React, { Component } from 'react';\r\n\r\nimport Modal from '../../Components/UI/Modal/Modal';\r\nimport Aux from '../AuxFolder/lax';\r\n\r\nconst withErrorHandler = ( WrappedComponent, axios ) => {\r\n    return class extends Component {\r\n        state = {\r\n            error: null\r\n        }\r\n\r\n        componentWillMount () {\r\n            this.reqInterceptor = axios.interceptors.request.use(req => {\r\n                this.setState({error: null});\r\n                return req;\r\n            });\r\n            this.resInterceptor = axios.interceptors.response.use(res => res, error => {\r\n                this.setState({error: error});\r\n            });\r\n        }\r\n\r\n        componentWillUnmount() {\r\n            axios.interceptors.request.eject(this.reqInterceptor);\r\n            axios.interceptors.response.eject(this.resInterceptor);\r\n        }\r\n\r\n        errorConfirmedHandler = () => {\r\n            this.setState({error: null});\r\n        }\r\n\r\n        render () {\r\n            return (\r\n                <Aux>\r\n                    <Modal \r\n                        show={this.state.error}\r\n                        modalClosed={this.errorConfirmedHandler}>\r\n                        {this.state.error ? this.state.error.message : null}\r\n                    </Modal>\r\n                    <WrappedComponent {...this.props} />\r\n                </Aux>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default withErrorHandler;","import * as actionTypes from './actionTypes'\r\nimport axios from 'axios'\r\n\r\nexport const authStart = () => {\r\n    return {\r\n        type : actionTypes.AUTH_START\r\n    }\r\n}\r\n\r\nexport const authSuccess = (token, userId) => {\r\n    return {\r\n        type : actionTypes.AUTH_SUCCESS,\r\n        token : token,\r\n        userId : userId\r\n    }\r\n}\r\n\r\n\r\nexport const authFail = (error) => {\r\n    return {\r\n        type : actionTypes.AUTH_FAIL,\r\n        error : error\r\n    }\r\n}\r\n\r\nexport const logout = () => {\r\n    localStorage.removeItem('token')\r\n    localStorage.removeItem('expirationDate')\r\n    localStorage.removeItem('userId')\r\n    return {\r\n        type : actionTypes.AUTH_LOGOUT\r\n    }\r\n}\r\n\r\nexport const checkAuthTimeOut = (expirationTime) => {\r\n    return dispatch => {\r\n        setTimeout(() => {\r\n            dispatch(logout())\r\n        }, expirationTime * 1000 )\r\n    }\r\n}\r\n\r\nexport const auth = (email, password, isSignUp) => {\r\n   \r\n    return dispatch => {\r\n       const authData = {\r\n           email : email,\r\n           password : password,\r\n           returnSecureToken : true\r\n       }\r\n       let url = 'https://www.googleapis.com/identitytoolkit/v3/relyingparty/signupNewUser?key=AIzaSyDilfJaHLQTbICQgEmX2kIs_ErkUeecSCY'\r\n       if(!isSignUp){\r\n           url = 'https://www.googleapis.com/identitytoolkit/v3/relyingparty/verifyPassword?key=AIzaSyDilfJaHLQTbICQgEmX2kIs_ErkUeecSCY'\r\n       }\r\n        dispatch(authStart())\r\n        axios.post(url, authData)\r\n             .then(res => {\r\n                let expirationDate = new Date(new Date().getTime() + res.data.expiresIn * 1000)\r\n                localStorage.setItem('token', res.data.idToken)\r\n                localStorage.setItem('expirationDate', expirationDate)\r\n                localStorage.setItem('userId', res.data.localId)\r\n                dispatch(authSuccess(res.data.idToken, res.data.localId))\r\n                console.log(\"hii this is before error\")\r\n                dispatch(checkAuthTimeOut(res.data.expiresIn))\r\n             })\r\n             .catch(err => {    \r\n                 dispatch(authFail(err.response.data.error))\r\n             })\r\n    }\r\n}\r\n\r\nexport const setAuthRedirectPath = (path) => {\r\n    return {\r\n        type : actionTypes.SET_AUTH_REDIRECT_PATH,\r\n        path : path\r\n    }\r\n}\r\n\r\nexport const checkAuthState = () => {\r\n    return dispatch => {\r\n        const token = localStorage.getItem('token')\r\n        if(!token){\r\n            dispatch(logout())\r\n\r\n        }else {\r\n            const expirationDate = new Date(localStorage.getItem('expirationDate'))\r\n            if(expirationDate > new Date()) {\r\n                const userId =  localStorage.getItem('userId')\r\n                dispatch(authSuccess(token, userId))\r\n                dispatch(checkAuthTimeOut((expirationDate.getTime() - new Date().getTime()) /1000) )\r\n            }\r\n            else{\r\n                dispatch(logout())\r\n            }\r\n        }\r\n    }\r\n}","export const ADD_INGREDIENT  = 'ADD_INGREDIENT'\r\nexport const REMOVE_INGREDIENT = 'REMOVE_INGREDIENT'\r\nexport const SET_INGREDIENT = 'SET_INGREDIENT'\r\nexport const FETCH_INGREDIENT_FAILED = 'FETCH_INGREDIENT_FAILED'\r\n\r\nexport const PURCHASE_BURGER_START = 'PURCHASE_BURGER_START'\r\nexport const PURCHASE_BURGER_SUCCESS = 'PURCHASE_BURGER_SUCCESS'\r\nexport const PURCHASE_BURGER_FAIL = 'PURCHASE_BURGER_FAIL'\r\nexport const PURCHASE_INIT = 'PURCHASE_INIT'\r\n\r\nexport const FETCH_ORDER_START = 'FETCH_ORDER_START'\r\nexport const FETCH_ORDER_SUCCESS = 'FETCH_ORDER_SUCCESS'\r\nexport const FETCH_ORDER_FAIL = 'FETCH_ORDER_FAIL'\r\n\r\nexport const AUTH_START = 'AUTH_START'\r\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS'\r\nexport const AUTH_FAIL = 'AUTH_FAIL'\r\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT'\r\n\r\nexport const SET_AUTH_REDIRECT_PATH = 'SET_AUTH_REDIRECT_PATH'","import React, {Component} from 'react'\r\nimport Aux from '../../hoc/AuxFolder/lax';\r\nimport Burger from '../../Components/Burger/Burger'\r\nimport BuildControls from '../../Components/Burger/BuildControls/BuildControls'\r\nimport Modal from '../../Components/UI/Modal/Modal'\r\nimport OrderSummary from '../../Components/Burger/OrderSummary/OrderSummary'\r\nimport axios from '../../axios-orders'\r\nimport Spinner from '../../Components/UI/Spinner/Spinner'\r\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler'\r\nimport { connect } from 'react-redux'\r\n\r\nimport * as burgerBuilderActions from '../../store/action/index'\r\n\r\n\r\n\r\n\r\nclass BurgerBuilder extends Component {\r\n\r\n    \r\n    state = {\r\n        \r\n       \r\n        purchasable : false,\r\n        purchasing : false,\r\n        \r\n         \r\n    }\r\n\r\n    componentDidMount(){\r\n       this.props.onInitIngredient()\r\n    }\r\n\r\n\r\n    // addIngredientHandler = (type) =>{\r\n    //     const oldCount = this.state.ingredients[type]\r\n    //     const newCount = oldCount + 1\r\n    //     const updatedIngredients = {\r\n    //         ...this.state.ingredients\r\n    //     }\r\n    //     updatedIngredients[type] = newCount\r\n    //     const oldPrice = this.state.totalPrice\r\n    //     const priceAddition = INGREDIENT_PRICES[type]\r\n    //     const newPrice = oldPrice + priceAddition\r\n    //     this.setState({ingredients : updatedIngredients, totalPrice : newPrice})\r\n    //     this.purchasableHandler(updatedIngredients)\r\n    // }\r\n\r\n    // removeIngredientHandler = (type) =>{\r\n    //     const oldCount = this.state.ingredients[type]\r\n    //     if (oldCount <= 0) {\r\n    //         return\r\n    //     }\r\n    //     const newCount = oldCount - 1\r\n    //     const updatedIngredients = {\r\n    //         ...this.state.ingredients\r\n    //     }\r\n    //     updatedIngredients[type] = newCount\r\n    //     const oldPrice = this.state.totalPrice\r\n    //     const priceSubtraction = INGREDIENT_PRICES[type]\r\n    //     const newPrice = oldPrice - priceSubtraction\r\n    //     this.setState({ingredients : updatedIngredients, totalPrice : newPrice})\r\n    //     this.purchasableHandler(updatedIngredients)\r\n    // }\r\n\r\n    purchasableHandler = (ingredients) => {\r\n        \r\n        const sum = Object.keys(ingredients).map(ingkey=>{\r\n            return ingredients[ingkey]\r\n        }).reduce((sum,el)=>{\r\n            return sum+el\r\n        },0)\r\n        return sum>0\r\n    }\r\n\r\n    purchaseHandler=()=>{\r\n\r\n        if(this.props.isAuthenticated)\r\n        {this.setState({purchasing : true})}\r\n        else{\r\n            this.props.onSetAuthRedirectPath('/checkout')\r\n            this.props.history.push('/auth')\r\n        }\r\n    }\r\n    modalHandler = () => {\r\n        this.setState({purchasing : false})\r\n    }\r\n    purchaseContinueHandler=()=>{\r\n        /*********************************Old Definition of the Function ************************************************/\r\n        //   const orderParams = []\r\n        //   for (let i in this.state.ingredients) {\r\n        //       orderParams.push(encodeURIComponent(i) + '=' + encodeURIComponent(this.state.ingredients[i]))\r\n        //   }\r\n        //   orderParams.push('totalPrice=' + this.state.totalPrice)\r\n        //   const paramsData = orderParams.join('&')\r\n        //   this.props.history.push({\r\n        //       pathname : '/CheckOut',\r\n        //       search :'?'+paramsData\r\n        //   })\r\n            this.props.onInitPurchase()\r\n            this.props.history.push('/checkout')\r\n\r\n    } \r\n\r\n\r\n    render(){\r\n                const disabledInfo = {\r\n                    ...this.props.ings\r\n                }\r\n                for(let key in disabledInfo){\r\n                    disabledInfo[key] = disabledInfo[key] <= 0\r\n                }\r\n\r\n                let orderSummary = null\r\n                let burger = this.props.error ?<p>Ingredients can not be displayed </p> : <Spinner />\r\n\r\n                if(this.props.ings){\r\n\r\n                    burger = (\r\n                        <Aux>\r\n                            <Burger ingredients={this.props.ings} />\r\n                            <BuildControls \r\n                            addIngredient={this.props.onIngredientAdded}\r\n                            removeIngredient={this.props.onIngredientRemoved}\r\n                            disableOrNot={disabledInfo}\r\n                            price={this.props.price}\r\n                            ordered={this.purchaseHandler}\r\n                            isAuth={this.props.isAuthenticated}\r\n                            purchasable={this.purchasableHandler(this.props.ings)}/>\r\n                        </Aux>\r\n                    )\r\n                    orderSummary = <OrderSummary \r\n                                        ingredients={this.props.ings}\r\n                                        cancel={this.modalHandler}\r\n                                        continue={this.purchaseContinueHandler}\r\n                                        price={this.props.price}/>\r\n                    \r\n                }\r\n               \r\n                \r\n                \r\n        return (\r\n                <Aux>\r\n                    <Modal  show={this.state.purchasing} modalClosed={this.modalHandler}>\r\n                        {orderSummary}\r\n                    </Modal>\r\n                    {burger}\r\n                   \r\n                </Aux>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    \r\n    return {\r\n        ings : state.burgerBuilder.ingredients,\r\n        price : state.burgerBuilder.totalPrice,\r\n        error : state.burgerBuilder.error,\r\n        isAuthenticated : state.auth.token !== null\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onIngredientAdded : (ingName) => dispatch(burgerBuilderActions.addIngredient(ingName)),\r\n        onIngredientRemoved : (ingName) => dispatch (burgerBuilderActions.removeIngredient(ingName)),\r\n        onInitIngredient : () => dispatch(burgerBuilderActions.initIngredients()),\r\n        onInitPurchase : () => dispatch(burgerBuilderActions.purchaseInit()),\r\n        onSetAuthRedirectPath : (path) => dispatch(burgerBuilderActions.setAuthRedirectPath(path))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(BurgerBuilder, axios))","import * as actionTypes from './actionTypes'\r\nimport axios from '../../axios-orders'\r\n\r\nexport const addIngredient = (name) => {\r\n    return {\r\n        type : actionTypes.ADD_INGREDIENT,\r\n        ingredientName : name\r\n    }\r\n}\r\n\r\nexport const removeIngredient = (name) => {\r\n    return {\r\n        type : actionTypes.REMOVE_INGREDIENT,\r\n        ingredientName : name\r\n    }\r\n}\r\n\r\nexport const setIngredients = (ingredients) =>{\r\n    return {\r\n        type : actionTypes.SET_INGREDIENT,\r\n        ingredients : ingredients\r\n    }\r\n}\r\nexport const fetchIngredientFailed = () => {\r\n    return {\r\n        type : actionTypes.FETCH_INGREDIENT_FAILED\r\n    }\r\n}\r\n\r\nexport const initIngredients = () => {\r\n    return dispatch => {\r\n        axios.get('https://myburger-builder.firebaseio.com/ingredients.json')\r\n        .then(response => {\r\n           \r\n            dispatch(setIngredients(response.data))\r\n        })\r\n        .catch(error => {\r\n            dispatch(fetchIngredientFailed())\r\n        })\r\n    }\r\n\r\n\r\n}","import * as actionTypes from './actionTypes'\r\nimport axios from '../../axios-orders'\r\n\r\nexport const purchaseBurgerSuccess = (id, orderData) => {\r\n\r\n    return {\r\n        type : actionTypes.PURCHASE_BURGER_SUCCESS,\r\n        orderId : id,\r\n        orderData : orderData,\r\n    }\r\n}\r\n\r\nexport const purchaseBurgerFail = (error) => {\r\n\r\n    return {\r\n        type : actionTypes.PURCHASE_BURGER_FAIL,\r\n        error : error\r\n    }\r\n}\r\n\r\nexport const purchaseBurgerStart = () => {\r\n    return {\r\n        type : actionTypes.PURCHASE_BURGER_START\r\n    }\r\n}\r\n\r\nexport const purchaseBurger = (orderData, token) => {\r\n\r\n    return dispatch => {\r\n        dispatch(purchaseBurgerStart())\r\n        axios.post('/orders.json?auth=' + token, orderData)\r\n        .then(response => {\r\n            console.log(response)\r\n           dispatch(purchaseBurgerSuccess(response.data.name, orderData))   \r\n        })\r\n        .catch(error => {\r\n            console.log(error)\r\n           dispatch(purchaseBurgerFail(error))\r\n        })\r\n    }\r\n}\r\n\r\nexport const purchaseInit = () => {\r\n    return {\r\n        type : actionTypes.PURCHASE_INIT\r\n    }\r\n}\r\n\r\nexport const fetchOrderStart = () => {\r\n    return {\r\n        type : actionTypes.FETCH_ORDER_START\r\n    }\r\n}\r\n\r\nexport const fetchOrderSuccess = (orders) =>{\r\n    return {\r\n        type : actionTypes.FETCH_ORDER_SUCCESS,\r\n        orders : orders\r\n    }\r\n}\r\n\r\nexport const fetchOrderFail = (error) => {\r\n    return {\r\n        type : actionTypes.FETCH_ORDER_FAIL,\r\n        error : error\r\n    }\r\n}\r\n\r\nexport const fetchOrder = (token, userId) => {\r\n    return dispatch => {\r\n        dispatch(fetchOrderStart())\r\n        const queryParams = '?auth=' + token + '&orderBy=\"userId\"&equalTo=\"' + userId + '\"'\r\n        axios.get('/orders.json' + queryParams)\r\n        .then(res=>{\r\n            const fetchedOrders =[]\r\n            for (const key in res.data) {\r\n                fetchedOrders.push({\r\n                    ...res.data[key],\r\n                    id : key\r\n                })\r\n            }\r\n            dispatch(fetchOrderSuccess(fetchedOrders))\r\n            \r\n        })\r\n        .catch(err=>{\r\n            dispatch(fetchOrderFail(err))\r\n        })\r\n    }\r\n}","import React from 'react'\r\nimport Burger from '../../Burger/Burger'\r\nimport Button from '../../UI/Button/Button'\r\nimport styles from './CheckOutSummary.css'\r\n\r\n\r\nconst CheckOutSummary = (props) =>{\r\n\r\n    return(\r\n        <div className={styles.CheckOutSummary}>\r\n            <h1>Hi this is your order</h1>\r\n            <div style={{width:'100%', margin:'auto'}}>\r\n                <Burger ingredients={props.ingredients}/>\r\n            </div>\r\n            <Button btnType=\"Danger\" clicked={props.cancel}>CANCEL</Button>\r\n            <Button btnType=\"Success\" clicked={props.success}>SUCCESS</Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CheckOutSummary","import React from 'react'\r\nimport styles from './Input.css'\r\n\r\n\r\nconst Input = (props) =>{\r\n    let inputElement = null\r\n    let classes = [styles.InputElement]\r\n    if(props.invalid && props.shouldValidate && props.touched ){\r\n        classes.push(styles.Invalid)\r\n    }\r\n    \r\n\r\n    switch(props.elementtype){\r\n        case('input'):\r\n            inputElement = <input \r\n            className={classes.join(' ')} \r\n            {...props.elementConfig}  \r\n            value={props.value}\r\n            onChange={props.change} />\r\n        break\r\n        case('textarea'):\r\n            inputElement = <textarea \r\n            className={classes.join(' ')} \r\n            {...props.elementConfig}  \r\n            value={props.value}\r\n            onChange={props.change} />\r\n        break\r\n        case('select'):\r\n            inputElement = (<select \r\n            className={classes.join(' ')} \r\n            value={props.value}\r\n            onChange={props.change} >\r\n            {props.elementConfig.options.map(option => (\r\n                <option key={option.value} value={option.value}>{option.displayValue}</option>\r\n            ))}\r\n                \r\n            </select>)\r\n        break\r\n        default:\r\n            inputElement = <input \r\n            className={classes.join(' ')} \r\n            {...props.elementConfig}  \r\n            value={props.value} />\r\n       \r\n    }\r\n\r\n    return(\r\n        <div className={styles.Input}>\r\n        <label className={styles.Label}>{props.label}</label>\r\n        {inputElement}\r\n        </div>\r\n    )\r\n}\r\nexport default Input","import React, {Component} from 'react'\r\nimport Button from '../../../Components/UI/Button/Button'\r\nimport styles from './ContactData.css'\r\n\r\nimport Spinner from '../../../Components/UI/Spinner/Spinner'\r\nimport Input from '../../../Components/UI/Input/Input'\r\n\r\nimport {Redirect} from 'react-router-dom'\r\nimport {connect} from 'react-redux'\r\n\r\nimport * as  burgerBuilderActions from '../../../store/action/index'\r\n\r\n\r\n\r\n\r\nclass ContactData extends Component {\r\n\r\n    state = {\r\n        orderForm :{\r\n\r\n                name : {\r\n                    elementType:'input',\r\n                    elementConfig:{\r\n                        type:'text',\r\n                        placeholder:'Your Name'\r\n                    },\r\n                    value : '',\r\n                    touched : false,\r\n                    validation : {\r\n                        required : true\r\n                    },\r\n                    valid : false\r\n                },\r\n                street : {\r\n                    elementType:'input',\r\n                    elementConfig:{\r\n                        type:'text',\r\n                        placeholder:'Street'\r\n                    },\r\n                    value : '',\r\n                    touched : false,\r\n                    validation : {\r\n                        required : true\r\n                    },\r\n                    valid : false\r\n                \r\n                },\r\n                zipCode : {\r\n                    elementType:'input',\r\n                    elementConfig:{\r\n                        type:'text',\r\n                        placeholder:'ZIP Code'\r\n                    },\r\n                    value : '',\r\n                    touched : false,\r\n                    validation : {\r\n                        required : true,\r\n                        minLength: 6,\r\n                        maxLength: 6\r\n                    },\r\n                    valid : false\r\n                },\r\n                country : {\r\n                    elementType:'input',\r\n                    elementConfig:{\r\n                        type:'text',\r\n                        placeholder:'Your Country'\r\n                    },\r\n                    value : '',\r\n                    touched : false,\r\n                    validation : {\r\n                        required : true\r\n                    },\r\n                    valid : false\r\n                },\r\n                email : {\r\n                    elementType:'input',\r\n                    elementConfig:{\r\n                        type:'email',\r\n                        placeholder:'Your Mail'\r\n                    },\r\n                    value : '',\r\n                    touched : false,\r\n                    validation : {\r\n                        required : true\r\n                    },\r\n                    valid : false\r\n                },\r\n                deliveryMethod : {\r\n                    elementType:'select',\r\n                    elementConfig:{\r\n                      options : [\r\n                          {value:'fastest', displayValue:'Fastest'},\r\n                          {value:'Cheapest', displayValue:'Cheapest'}\r\n                        ]\r\n                    },\r\n                    validation : {},\r\n                    value : 'fastest',\r\n                    valid : true\r\n                },\r\n        },\r\n        formIsValid:false,\r\n        \r\n        home : false\r\n    }\r\n    orderHandler =  (event) =>{\r\n            event.preventDefault()\r\n            const formData ={}\r\n            for (let formElementIdentifier in this.state.orderForm){\r\n                formData[formElementIdentifier] = this.state.orderForm[formElementIdentifier].value\r\n            }\r\n            this.setState({loading:true})\r\n            const data = {\r\n                   ingredients : this.props.ings,\r\n                   price : this.props.price,\r\n                   orderData:formData,\r\n                   userId : this.props.userId\r\n            }\r\n            this.props.onOrderBurger(data, this.props.token)\r\n\r\n    }\r\n\r\n    onChangeHandler = (event, inputElementIdentifier)=>{\r\n        const updatedForm = {\r\n            ...this.state.orderForm\r\n        }\r\n        const updatedFormElement = {\r\n            ...updatedForm[inputElementIdentifier]\r\n        }\r\n        updatedFormElement.value = event.target.value\r\n        updatedFormElement.valid = this.checkValidity(updatedFormElement.value, updatedFormElement.validation)\r\n        updatedFormElement.touched=true\r\n        updatedForm[inputElementIdentifier] = updatedFormElement\r\n        let isFormValid =true\r\n        for (inputElementIdentifier in updatedForm) {\r\n            isFormValid = updatedForm[inputElementIdentifier].valid && isFormValid\r\n        }\r\n        this.setState({orderForm:updatedForm, formIsValid:isFormValid})\r\n    }\r\n\r\n\r\n    checkValidity(value, rules){\r\n        if(!rules){\r\n            return true  \r\n        }\r\n        \r\n        \r\n        let isValid = true \r\n        if(rules.required){\r\n            isValid=value.trim()!==''\r\n        }\r\n        if(rules.minLength){\r\n            isValid = value.length >= rules.minLength && isValid\r\n        }\r\n        if(rules.maxLength){\r\n            isValid = value.length <= rules.maxLength  && isValid\r\n        }\r\n\r\n        return isValid\r\n    }\r\n    render(){\r\n        let redirect = null\r\n        if(this.state.home){\r\n            redirect = <Redirect to='/' />\r\n        }\r\n        const formElementsArray = []\r\n        for(let key in this.state.orderForm){\r\n            formElementsArray.push({\r\n                id: key,\r\n                config : this.state.orderForm[key]\r\n            })\r\n        }\r\n       \r\n        let form = (<form onSubmit={this.orderHandler}>\r\n                        {formElementsArray.map(formElement=>(\r\n                            <Input \r\n                                key={formElement.id}\r\n                                invalid={!formElement.config.valid}\r\n                                elementtype={formElement.config.elementType}\r\n                                elementConfig={formElement.config.elementConfig}\r\n                                value={formElement.config.value} \r\n                                touched={formElement.config.touched}\r\n                                shouldValidate={formElement.config.validation}\r\n                                change={(event)=>this.onChangeHandler(event, formElement.id)}/>\r\n\r\n                        ))}\r\n                         \r\n                         <Button btnType='Success' disabled={!this.state.formIsValid} >Place Order </Button>\r\n                    \r\n                    </form> \r\n                    )\r\n        if(this.props.loading){\r\n            form = <Spinner />\r\n        }\r\n\r\n        return(\r\n            <div className={styles.ContactData}>\r\n                <h3>Please Enter Your Contact Details</h3>\r\n                {form}\r\n                {redirect}           \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        ings : state.burgerBuilder.ingredients,\r\n        price : state.burgerBuilder.totalPrice,\r\n        loading : state.order.loading,\r\n        token : state.auth.token,\r\n        userId : state.auth.userId\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onOrderBurger : (orderData, token) => dispatch(burgerBuilderActions.purchaseBurger(orderData, token))\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactData)","import React, {Component} from 'react'\r\nimport CheckOutSummary from '../../Components/Order/CheckOutSummary/CheckOutSummary'\r\nimport ContactData from './ContactData/ContactData'\r\nimport {Route, Redirect} from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\n\r\n\r\nclass CheckOut extends Component {\r\n\r\n   \r\n\r\n    cancelButtonHandler = () =>{\r\n\r\n        this.props.history.goBack()\r\n    }\r\n    successButtonHandler = () =>{ \r\n        this.props.history.replace('/checkout/Contact-Data')\r\n    }\r\n\r\n\r\n    render(){\r\n        let summary = <Redirect to=\"/\" />\r\n        if(this.props.ings){\r\n            let purchased = this.props.purchasing ? <Redirect to=\"/\" /> : null\r\n            summary = (\r\n                <div>\r\n                    {purchased}\r\n                    <CheckOutSummary \r\n                    ingredients={this.props.ings} \r\n                    cancel={this.cancelButtonHandler}\r\n                    success={this.successButtonHandler}/>\r\n\r\n               <Route \r\n                    path={this.props.match.path + '/Contact-Data'} \r\n                    component={ContactData}/>    \r\n                </div>\r\n            )\r\n        }\r\n        return(\r\n            <div>\r\n                {summary}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        ings : state.burgerBuilder.ingredients,\r\n        purchasing : state.order.purchasing\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport default connect(mapStateToProps)(CheckOut)","import React, {Component} from 'react'\r\nimport Input from '../../Components/UI/Input/Input'\r\nimport Button from '../../Components/UI/Button/Button'\r\nimport styles from './Auth.css'\r\nimport * as actions from '../../store/action/index'\r\nimport {connect} from 'react-redux'\r\nimport Spinner from '../../Components/UI/Spinner/Spinner'\r\nimport {Redirect} from 'react-router-dom'\r\n\r\n\r\n\r\nclass Auth extends Component {\r\n    \r\n    state = {\r\n        controls : {\r\n            email : {\r\n                elementType:'input',\r\n                elementConfig:{\r\n                    type:'email',\r\n                    placeholder:'Your Email Address'\r\n                },\r\n                value : '',\r\n                touched : false,\r\n                validation : {\r\n                    required : true,\r\n                    isEmail : true\r\n                },\r\n                valid : false\r\n            },\r\n            password : {\r\n                elementType:'input',\r\n                elementConfig:{\r\n                    type:'password',\r\n                    placeholder:'Your Password'\r\n                },\r\n                value : '',\r\n                touched : false,\r\n                validation : {\r\n                    required : true,\r\n                    minLength : 6\r\n                },\r\n                valid : false\r\n            }\r\n        },\r\n        isSignUp : true,\r\n    }\r\n\r\n    componentDidMount(){\r\n        if(!this.props.buildingBurger && this.props.authRedirectPath !== \"/\" ){\r\n           \r\n            this.props.onSetAuthRedirectPath()\r\n        }\r\n    }\r\n\r\n    checkValidity(value, rules){\r\n        if(!rules){\r\n            return true  \r\n        }\r\n        \r\n        \r\n        let isValid = true \r\n        if(rules.required){\r\n            isValid=value.trim()!==''\r\n        }\r\n        if(rules.minLength){\r\n            isValid = value.length >= rules.minLength && isValid\r\n        }\r\n        if(rules.maxLength){\r\n            isValid = value.length <= rules.maxLength  && isValid\r\n        }\r\n\r\n        return isValid\r\n    }\r\n\r\n    inputChangeHandler = (event, controlName) => {\r\n     const   updatedControls = {\r\n            ...this.state.controls,\r\n            [controlName] : {\r\n                ...this.state.controls[controlName],\r\n                value : event.target.value,\r\n                valid : this.checkValidity(event.target.value, this.state.controls[controlName].validation),\r\n                touched : true\r\n            }\r\n        }\r\n        this.setState({controls : updatedControls})\r\n    }\r\n\r\n    submitHandler = (event) => {\r\n       \r\n        event.preventDefault()\r\n        this.props.onAuth(this.state.controls.email.value, this.state.controls.password.value, this.state.isSignUp)\r\n    }\r\n\r\n    switchAuthMode = () => {\r\n        this.setState(prevState => {\r\n        return  {isSignUp : !prevState.isSignUp }\r\n        })\r\n    }\r\n   \r\n   \r\n    render() {\r\n        const formElementsArray = []\r\n        for(let key in this.state.controls){\r\n            formElementsArray.push({\r\n                id: key,\r\n                config : this.state.controls[key]\r\n            })\r\n        }\r\n        let form = formElementsArray.map(formElement => (\r\n            <Input \r\n                key={formElement.id}\r\n                invalid={!formElement.config.valid}\r\n                elementtype={formElement.config.elementType}\r\n                elementConfig={formElement.config.elementConfig}\r\n                value={formElement.config.value} \r\n                touched={formElement.config.touched}\r\n                shouldValidate={formElement.config.validation}\r\n                change={(event)=>this.inputChangeHandler(event, formElement.id)}/>\r\n        ))\r\n        \r\n        if(this.props.loading){\r\n            form = <Spinner />\r\n        }\r\n\r\n        \r\n\r\n        let errorMessage = null \r\n\r\n        if(this.props.error){\r\n            errorMessage = (\r\n                <p>{this.props.error.message}</p>\r\n            )\r\n        }\r\n\r\n        let authRedirect = null\r\n       \r\n        if(this.props.isAuthenticated) {\r\n           authRedirect = <Redirect to={this.props.authRedirectPath} />\r\n        }\r\n\r\n        return (\r\n            <div className={styles.Auth}>\r\n                {authRedirect}\r\n                {errorMessage}\r\n                <form onSubmit={this.submitHandler}>\r\n                    {form}\r\n                    <Button btnType=\"Success\">SUBMIT</Button>\r\n                </form>\r\n                <Button clicked={this.switchAuthMode} btnType=\"Danger\"> Switch to {this.state.isSignUp ? 'Sign In' : 'Sign Up'}</Button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loading : state.auth.loading,\r\n        error : state.auth.error,\r\n        isAuthenticated : state.auth.token !== null,\r\n        buildingBurger : state.burgerBuilder.building,\r\n        authRedirectPath : state.auth.authRedirectPath\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onAuth : (email, password, isSignUp) => dispatch(actions.auth(email, password, isSignUp)),\r\n        onSetAuthRedirectPath : () => dispatch(actions.setAuthRedirectPath(\"/\"))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Auth)","import React, {Component} from 'react'\r\nimport * as actions from '../../../store/action/index'\r\nimport {connect} from 'react-redux'\r\nimport {Redirect} from 'react-router-dom'\r\n\r\n\r\nclass Logout extends Component {\r\n\r\n    componentDidMount(){\r\n        this.props.onLogout()\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <Redirect to=\"/\" />\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onLogout : () => dispatch(actions.logout())\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(Logout)","import React from 'react'\r\nimport styles from './Order.css'\r\n\r\nconst Order = (props) => {\r\n    let ingredients =[]\r\n    for (let ingName in props.ingredients) {\r\n        ingredients.push(\r\n            {\r\n                name : ingName,\r\n                amount : props.ingredients[ingName]\r\n            }\r\n        )\r\n    }\r\n    let ingOutput = ingredients.map(ig=>{\r\n        return( <span \r\n                    style={{\r\n                        textTransform:'capitalize',\r\n                        margin: '0 5px',\r\n                        padding:'5px',\r\n                        border : '1px solid #eee',\r\n                        boxSizing:'border-box'\r\n                    }}\r\n                    key={ig.name}>\r\n            {ig.name} ({ig.amount}) </span>)\r\n    })\r\n    return(\r\n        <div className={styles.Order}>\r\n        <p>Ingredients: {ingOutput}</p>\r\n        <p>Price: <strong>{Number.parseFloat(props.price).toFixed(2)} $</strong></p>\r\n    </div>\r\n    )\r\n    \r\n}\r\n\r\n\r\nexport default Order\r\n","import React, {Component} from 'react'\r\nimport Order from '../../Components/Order/Order'\r\nimport axios from '../../axios-orders'\r\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler'\r\nimport * as actions from '../../store/action/index'\r\nimport {connect } from 'react-redux'\r\nimport Spinner from '../../Components/UI/Spinner/Spinner'\r\n\r\nclass Orders extends Component {\r\n\r\n   \r\n\r\n    componentDidMount(){\r\n        this.props.onfetchOrders(this.props.token, this.props.userId)\r\n    }\r\n\r\n        render(){\r\n            let order = <Spinner />\r\n            if(!this.props.loading) {\r\n                order = this.props.orders.map(order => (  \r\n                                                        <Order \r\n                                                            key={order.id}          \r\n                                                            price={order.price} \r\n                                                            ingredients={order.ingredients}/>))\r\n            }\r\n            return(\r\n                <div>\r\n                   {order}\r\n                </div>\r\n            )\r\n        }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        orders : state.order.orders,\r\n        loading : state.order.loading,\r\n        token : state.auth.token,\r\n        userId : state.auth.userId\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onfetchOrders : (token, userId) => dispatch(actions.fetchOrder(token, userId))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(Orders,axios))","import React, { Component } from 'react';\nimport Layout from './hoc/Layout/Layout'\nimport BurgerBuilder from './Containers/BurgurBuilder/BurgerBuilder';\nimport CheckOut from './Containers/CheckOut/Checkout'\nimport {Route, Switch, withRouter, Redirect} from 'react-router-dom'\nimport Auth from './Containers/Auth/Auth'\nimport Logout from './Containers/Auth/Logout/Logout'\nimport {connect} from 'react-redux'\nimport * as actions from './store/action/index'\n\nimport Orders from './Containers/Orders/Orders'\nclass App extends Component {\n\n  componentDidMount(){\n    this.props.onCheckAuthState()\n  }\n\n  render() {\n    let routes = (\n      <Switch>\n            <Route path='/auth' component={Auth} />\n            <Route path='/' component={BurgerBuilder} />\n            <Redirect to=\"/\" />\n      </Switch>\n    )\n\n    if(this.props.isAuthenticated){\n     routes= ( <Switch>\n                  <Route path='/Checkout' component={CheckOut} />\n                  <Route path='/orders' component={Orders} />\n                  <Route path='/logout' component={Logout} />\n                  <Route path='/auth' component={Auth} />\n                  <Route path='/'exact component={BurgerBuilder} />\n                  <Redirect to=\"/\" />\n              </Switch>\n              )\n    }\n\n\n    return (\n      <div >\n          <Layout>\n              {routes}\n          </Layout>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state =>{\n  return {\n    isAuthenticated : state.auth.token !== null\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onCheckAuthState : () => dispatch(actions.checkAuthState())\n  }\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App))","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export const updateObject = (oldObject, updatedProperties) => {\r\n    return {\r\n        ...oldObject,\r\n        ...updatedProperties\r\n    }\r\n}","import * as actionTypes from '../action/actionTypes'\r\nimport {updateObject} from '../utility'\r\nconst initialState = {\r\n    \r\n    ingredients : null,\r\n    totalPrice : 3,\r\n    error : false,\r\n    building : false\r\n}\r\nconst INGREDIENT_PRICES = {\r\n    salad : 0.5,\r\n    bacon : 8,\r\n    meat  : 6,\r\n    cheese: 3\r\n}\r\n\r\nconst addIngredient = (state, action) => {\r\n    const updatedIngredient = {[action.ingredientName] : state.ingredients[action.ingredientName] + 1}\r\n    const updatedIngredients = updateObject(state.ingredients, updatedIngredient)\r\n    const updatedState = {\r\n        ingredients : updatedIngredients,\r\n        totalPrice : state.totalPrice + INGREDIENT_PRICES[action.ingredientName],\r\n        building : true\r\n    }\r\n    return updateObject(state, updatedState)\r\n}\r\n\r\nconst removeIngredient = (state, action) => {\r\n    const updatedIng = {[action.ingredientName] : state.ingredients[action.ingredientName] - 1}\r\n    const updatedIngs = updateObject(state.ingredients, updatedIng)\r\n    const updatedSt = {\r\n        ingredients : updatedIngs,\r\n        totalPrice : state.totalPrice - INGREDIENT_PRICES[action.ingredientName],\r\n        building : true\r\n    }\r\n    return updateObject(state, updatedSt)\r\n}\r\n\r\nconst setIngredient = (state, action) => {\r\n   \r\n    return updateObject(state, {\r\n        ingredients : {\r\n            salad : action.ingredients.salad,\r\n            bacon : action.ingredients.bacon,\r\n            cheese : action.ingredients.cheese,\r\n            meat : action.ingredients.meat\r\n        },\r\n        totalPrice : 3,\r\n        error : false,\r\n        building : false\r\n    })\r\n}\r\n\r\nconst fetchIngredient = (state, action) => {\r\n    return updateObject(state, {error : true})\r\n}\r\n\r\nconst reducer = (state =  initialState, action) => {\r\n\r\n    switch(action.type){\r\n\r\n        case actionTypes.ADD_INGREDIENT : return addIngredient(state, action)\r\n       \r\n\r\n        case actionTypes.REMOVE_INGREDIENT : return removeIngredient(state, action)\r\n       \r\n\r\n        case actionTypes.SET_INGREDIENT : return setIngredient(state, action)\r\n        \r\n        \r\n        case actionTypes.FETCH_INGREDIENT_FAILED : return fetchIngredient(state, action)\r\n        \r\n           \r\n        default : return state\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default reducer","import * as actionTypes from '../action/actionTypes'\r\nimport {updateObject} from '../utility'\r\n\r\n\r\nconst initialState = {\r\n    orders : [],\r\n    loading : false,\r\n    purchasing : false\r\n\r\n}\r\n\r\nconst purchaseInit = (state, action) => {\r\n    return updateObject(state, {purchasing : false})\r\n}\r\n\r\nconst purchaseBurgerStart = (state, action) => {\r\n    return updateObject(state, {loading : true})\r\n}\r\n\r\nconst purchaseBurgerSuccess = (state, action) => {\r\n    const newOrder = updateObject(state, { ...action.orderData, id : action.orderId})\r\n    \r\n        const updatedState = {\r\n            orders : state.orders.concat(newOrder),\r\n            loading : false,\r\n            purchasing : true   \r\n        }\r\n    return updateObject(state, updatedState)   \r\n}\r\n\r\nconst purchaseBurgerFail = (state, action) => {\r\n   \r\n    return updateObject(state, {loading : false})\r\n}\r\n\r\nconst fetchOrderStart = (state, action) => {\r\n    return updateObject(state, {loading : true})\r\n}\r\n\r\nconst fetchOrderSuccess = (state, action) => {\r\n    return updateObject(state, { \r\n        orders : action.orders,\r\n        loading : false})\r\n}\r\n\r\nconst fetchOrderFail = (state, action) => {\r\n    return updateObject(state, {loading : false})\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n\r\n    switch(action.type) {\r\n\r\n        case actionTypes.PURCHASE_INIT : return purchaseInit(state, action)\r\n        \r\n        \r\n        case actionTypes.PURCHASE_BURGER_START : return purchaseBurgerStart(state, action)\r\n       \r\n        \r\n        case actionTypes.PURCHASE_BURGER_SUCCESS : return purchaseBurgerSuccess(state, action)\r\n        \r\n\r\n        case actionTypes.PURCHASE_BURGER_FAIL : return purchaseBurgerFail(state, action)\r\n               \r\n\r\n        case actionTypes.FETCH_ORDER_START : return fetchOrderStart(state, action)\r\n       \r\n         \r\n        case actionTypes.FETCH_ORDER_SUCCESS : return fetchOrderSuccess(state, action)\r\n       \r\n           \r\n        case actionTypes.FETCH_ORDER_FAIL : return fetchOrderFail(state, action)\r\n        \r\n         \r\n        default : return { ...state }\r\n    }\r\n}\r\n\r\nexport default reducer","import * as actionTypes from '../action/actionTypes'\r\nimport {updateObject} from '../utility'\r\nconst initialState = {\r\n    token : null,\r\n    userId : null,\r\n    loading : false,\r\n    error : null,\r\n    authRedirectPath : '/'\r\n}\r\n\r\nconst authStart = (state, action) => {\r\n    return updateObject(state, { error: null, loading: true })\r\n}\r\n\r\nconst authSuccess = (state, action) => {\r\n    return updateObject(state, {\r\n        token : action.token,\r\n        userId : action.userId,\r\n        error : null,\r\n        loading: false\r\n    })\r\n}\r\n\r\nconst authFail = (state, action) => {\r\n    return updateObject(state, {\r\n        error : action.error,\r\n        loading : false\r\n    })\r\n}\r\n\r\nconst authLogout = (state, action) => {\r\n    return updateObject(state, {\r\n        token : null,\r\n        userId : null\r\n    })\r\n}\r\n\r\nconst setAuthRedirectPath = (state, action) => {\r\n    return updateObject(state, {\r\n        authRedirectPath : action.path\r\n    })\r\n}\r\n\r\nconst reducer = (state=initialState, action) => {\r\n\r\n    switch(action.type){\r\n\r\n        case actionTypes.AUTH_START : return authStart(state, action)\r\n\r\n        case actionTypes.AUTH_SUCCESS : return authSuccess(state, action)\r\n\r\n        case actionTypes.AUTH_FAIL : return authFail(state, action)\r\n\r\n        case actionTypes.AUTH_LOGOUT : return authLogout(state, action)\r\n\r\n        case actionTypes.SET_AUTH_REDIRECT_PATH : return setAuthRedirectPath(state, action)\r\n\r\n        default : return state\r\n    }\r\n\r\n}\r\n\r\nexport default reducer","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom'\nimport { Provider } from 'react-redux'\nimport { createStore, applyMiddleware, compose, combineReducers } from 'redux'\nimport burgerBuilderReducer from './store/reducer/burgerBuilderReducer'\nimport thunk from 'redux-thunk'\nimport orderReducer from './store/reducer/order'\nimport authReducer from './store/reducer/auth'\n\nconst rootReducer = combineReducers({\n    burgerBuilder : burgerBuilderReducer,\n    order : orderReducer,\n    auth : authReducer\n})\n\nconst composeEnhancers = process.env.NODE_ENV === 'development' ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__  : null || compose;\nconst stored = createStore(rootReducer,  composeEnhancers(\n    applyMiddleware(thunk)\n))\n\nconst app = (\n    <Provider store={stored}>\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n    </Provider>\n    \n)  \n    \n\nReactDOM.render( app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"z-0if1RAMLXmXS3zb16kB\",\"BreadTop\":\"_2hrfRCdh4bbWWmS6XEaWgv\",\"Seeds1\":\"i6BIZCPgI4vydjegK3azS\",\"Seeds2\":\"_2DzeOQK_Me26hRcRWN8dqE\",\"Meat\":\"_2XpsGP6Dc4Dm0fOSXflao1\",\"Cheese\":\"DSfw6jSnOp1gnMjTXYT36\",\"Salad\":\"_3VqIr10avp-MYzgEY-OwfR\",\"Bacon\":\"LSI9Zhr9pvP0crrGQn_CQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"_3QR8WKl-EeUwr8gB9II_jL\",\"open\":\"_3yPXfch1AMQI1H5Ugmc7nH\",\"close\":\"_3WvfkmI0Q9TTsybVUmreJT\",\"Logo\":\"_3mHRFj9hNBj8lnQ3QMTVB2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"_3YmJBaswVriXvrIeMHyXPN\",\"Label\":\"_13rVOVm_IPILGqNfpbbjDb\",\"Less\":\"_3VsI5T7GuPzwdypewpwLUA\",\"More\":\"_3u1cU_YVawsE37fLXUbjKV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"_20vFQAkAr24dYabL9XYK6h\",\"Label\":\"_1XBoSWCpPEepscX9q9JL_x\",\"InputElement\":\"Q3P3fZlwaSN8zjq12cZJE\",\"Invalid\":\"_2LngryMsmw-LBclTMzDZRR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"IN8CQE4aHavRADtc0U5ZT\",\"Logo\":\"PPexHCpqSY-wOsAwhy56o\",\"DesktopOnly\":\"wxAutH3ePTPRQOImNCKut\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"_3muABl6nY9GL11k9ZUBhkP\",\"active\":\"MCx74V3UarcbCplL_PgKn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"_1yfRZtNqOrBUJsyPcXLShx\",\"OrderButton\":\"_23WPgrjlpKMR-KdnvQyDd9\",\"enable\":\"EIdKzCcTnzhMfRUjzFu2k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"JZSLzQWFjRVVgWsO50oLM\",\"Success\":\"_1NfyhJ4rxpCR8y1dYDJgWj\",\"Danger\":\"_3MioW5g5MCEmbHwOMNO5J5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"_3KSp3DUIY1kjcb6AVrFAuH\"};","module.exports = __webpack_public_path__ + \"static/media/logo.b8503d26.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"T8cGNhgR1j81FRyvEVlA4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"_1Mz2Z1o5WYpmr-wkyN6ZgW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"_2r0ZTMoiCGjJX0IJXfIWZy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DrawerToggle\":\"_1tgUQpOBhbC3m2Nr1f4DC5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"aL12ygm3Vol_Kd92bFyIB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"_3M2l16ZDTOIMR7UenpkVmv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"_3CJR8r7OAKdawi5ipNdtJ9\",\"load2\":\"_31mIPgrrgHSHsnoekF85qA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CheckOutSummary\":\"_2KwvUTD8gRszEpefpaZIRV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactData\":\"_2AU4XGOdG2EyeF85NyCW3A\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Auth\":\"p6UkVCuEM9e5a0bYshlBu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"_339HbE3Z7zROowW6WMNoGW\"};"],"sourceRoot":""}