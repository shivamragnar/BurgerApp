{"ast":null,"code":"import _objectSpread from \"D:\\\\shivam\\\\ftl_projects\\\\BurgerApp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"D:\\\\shivam\\\\ftl_projects\\\\BurgerApp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\shivam\\\\ftl_projects\\\\BurgerApp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\shivam\\\\ftl_projects\\\\BurgerApp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\shivam\\\\ftl_projects\\\\BurgerApp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\shivam\\\\ftl_projects\\\\BurgerApp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\shivam\\\\ftl_projects\\\\BurgerApp\\\\src\\\\Containers\\\\BurgurBuilder\\\\BurgerBuilder.js\";\nimport React, { Component } from 'react';\nimport Aux from '../../hoc/AuxFolder/lax';\nimport Burger from '../../Components/Burger/Burger';\nimport BuildControls from '../../Components/Burger/BuildControls/BuildControls';\nimport Modal from '../../Components/UI/Modal/Modal';\nimport OrderSummary from '../../Components/Burger/OrderSummary/OrderSummary';\nimport axios from '../../axios-orders';\nimport Spinner from '../../Components/UI/Spinner/Spinner';\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\nimport { connect } from 'react-redux';\nimport * as actionTypes from '../../store/actions';\nvar INGREDIENT_PRICES = {\n  salad: 0.5,\n  bacon: 8,\n  meat: 6,\n  cheese: 3\n};\n\nvar BurgerBuilder =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(BurgerBuilder, _Component);\n\n  function BurgerBuilder() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, BurgerBuilder);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(BurgerBuilder)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      totalPrice: 3,\n      purchasable: false,\n      purchasing: false,\n      loading: false,\n      error: null\n    };\n\n    _this.addIngredientHandler = function (type) {\n      var oldCount = _this.state.ingredients[type];\n      var newCount = oldCount + 1;\n\n      var updatedIngredients = _objectSpread({}, _this.state.ingredients);\n\n      updatedIngredients[type] = newCount;\n      var oldPrice = _this.state.totalPrice;\n      var priceAddition = INGREDIENT_PRICES[type];\n      var newPrice = oldPrice + priceAddition;\n\n      _this.setState({\n        ingredients: updatedIngredients,\n        totalPrice: newPrice\n      });\n\n      _this.purchasableHandler(updatedIngredients);\n    };\n\n    _this.removeIngredientHandler = function (type) {\n      var oldCount = _this.state.ingredients[type];\n\n      if (oldCount <= 0) {\n        return;\n      }\n\n      var newCount = oldCount - 1;\n\n      var updatedIngredients = _objectSpread({}, _this.state.ingredients);\n\n      updatedIngredients[type] = newCount;\n      var oldPrice = _this.state.totalPrice;\n      var priceSubtraction = INGREDIENT_PRICES[type];\n      var newPrice = oldPrice - priceSubtraction;\n\n      _this.setState({\n        ingredients: updatedIngredients,\n        totalPrice: newPrice\n      });\n\n      _this.purchasableHandler(updatedIngredients);\n    };\n\n    _this.purchasableHandler = function (ingredients) {\n      var sum = Object.keys(ingredients).map(function (ingkey) {\n        return ingredients[ingkey];\n      }).reduce(function (sum, el) {\n        return sum + el;\n      }, 0);\n\n      _this.setState({\n        purchasable: sum > 0\n      });\n    };\n\n    _this.purchaseHandler = function () {\n      _this.setState({\n        purchasing: true\n      });\n    };\n\n    _this.modalHandler = function () {\n      _this.setState({\n        purchasing: false\n      });\n    };\n\n    _this.purchaseContinueHandler = function () {\n      var orderParams = [];\n\n      for (var i in _this.state.ingredients) {\n        orderParams.push(encodeURIComponent(i) + '=' + encodeURIComponent(_this.state.ingredients[i]));\n      }\n\n      orderParams.push('totalPrice=' + _this.state.totalPrice);\n      var paramsData = orderParams.join('&');\n\n      _this.props.history.push({\n        pathname: '/CheckOut',\n        search: '?' + paramsData\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(BurgerBuilder, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      axios.get('https://myburger-builder.firebaseio.com/ingredients.json').then(function (response) {\n        _this2.setState({\n          ingredients: response.data\n        });\n      }).catch(function (error) {\n        _this2.setState({\n          error: error\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var disabledInfo = _objectSpread({}, this.props);\n\n      for (var key in disabledInfo) {\n        disabledInfo[key] = disabledInfo[key] <= 0;\n      }\n\n      var orderSummary = null;\n      var burger = this.state.error ? React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, \"Ingredients can not be displayed \") : React.createElement(Spinner, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      });\n\n      if (this.state.ingredients) {\n        burger = React.createElement(Aux, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122\n          },\n          __self: this\n        }, React.createElement(Burger, {\n          ingredients: this.state.ingredients,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 123\n          },\n          __self: this\n        }), React.createElement(BuildControls, {\n          addIngredient: this.addIngredientHandler,\n          removeIngredient: this.removeIngredientHandler,\n          disableOrNot: disabledInfo,\n          price: this.state.totalPrice,\n          ordered: this.purchaseHandler,\n          purchasable: this.state.purchasable,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124\n          },\n          __self: this\n        }));\n        orderSummary = React.createElement(OrderSummary, {\n          ingredients: this.state.ingredients,\n          cancel: this.modalHandler,\n          continue: this.purchaseContinueHandler,\n          price: this.state.totalPrice,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 133\n          },\n          __self: this\n        });\n      }\n\n      if (this.state.loading) {\n        orderSummary = React.createElement(Spinner, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 142\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(Aux, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, React.createElement(Modal, {\n        show: this.state.purchasing,\n        modalClosed: this.modalHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, orderSummary), burger);\n    }\n  }]);\n\n  return BurgerBuilder;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    ings: state.ingredients\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    onIngredientAdded: function onIngredientAdded(ingName) {\n      return dispatch({\n        type: actionTypes.ADD_INGREDIENT,\n        ingredientName: ingName\n      });\n    },\n    onIngredientRemoved: function onIngredientRemoved(ingName) {\n      return dispatch({\n        type: actionTypes.REMOVE_INGREDIENT,\n        ingredientName: ingName\n      });\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(BurgerBuilder, axios));","map":{"version":3,"sources":["D:\\shivam\\ftl_projects\\BurgerApp\\src\\Containers\\BurgurBuilder\\BurgerBuilder.js"],"names":["React","Component","Aux","Burger","BuildControls","Modal","OrderSummary","axios","Spinner","withErrorHandler","connect","actionTypes","INGREDIENT_PRICES","salad","bacon","meat","cheese","BurgerBuilder","state","totalPrice","purchasable","purchasing","loading","error","addIngredientHandler","type","oldCount","ingredients","newCount","updatedIngredients","oldPrice","priceAddition","newPrice","setState","purchasableHandler","removeIngredientHandler","priceSubtraction","sum","Object","keys","map","ingkey","reduce","el","purchaseHandler","modalHandler","purchaseContinueHandler","orderParams","i","push","encodeURIComponent","paramsData","join","props","history","pathname","search","get","then","response","data","catch","disabledInfo","key","orderSummary","burger","mapStateToProps","ings","mapDispatchToProps","dispatch","onIngredientAdded","ingName","ADD_INGREDIENT","ingredientName","onIngredientRemoved","REMOVE_INGREDIENT"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,GAAP,MAAgB,yBAAhB;AACA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,OAAOC,aAAP,MAA0B,qDAA1B;AACA,OAAOC,KAAP,MAAkB,iCAAlB;AACA,OAAOC,YAAP,MAAyB,mDAAzB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,OAAP,MAAoB,qCAApB;AACA,OAAOC,gBAAP,MAA6B,6CAA7B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAO,KAAKC,WAAZ,MAA6B,qBAA7B;AAEA,IAAMC,iBAAiB,GAAG;AAClBC,EAAAA,KAAK,EAAG,GADU;AAElBC,EAAAA,KAAK,EAAG,CAFU;AAGlBC,EAAAA,IAAI,EAAI,CAHU;AAIlBC,EAAAA,MAAM,EAAE;AAJU,CAA1B;;IAQMC,a;;;;;;;;;;;;;;;;;UAGFC,K,GAAQ;AAEJC,MAAAA,UAAU,EAAG,CAFT;AAGJC,MAAAA,WAAW,EAAG,KAHV;AAIJC,MAAAA,UAAU,EAAG,KAJT;AAKJC,MAAAA,OAAO,EAAG,KALN;AAMJC,MAAAA,KAAK,EAAG;AANJ,K;;UAsBRC,oB,GAAuB,UAACC,IAAD,EAAS;AAC5B,UAAMC,QAAQ,GAAG,MAAKR,KAAL,CAAWS,WAAX,CAAuBF,IAAvB,CAAjB;AACA,UAAMG,QAAQ,GAAGF,QAAQ,GAAG,CAA5B;;AACA,UAAMG,kBAAkB,qBACjB,MAAKX,KAAL,CAAWS,WADM,CAAxB;;AAGAE,MAAAA,kBAAkB,CAACJ,IAAD,CAAlB,GAA2BG,QAA3B;AACA,UAAME,QAAQ,GAAG,MAAKZ,KAAL,CAAWC,UAA5B;AACA,UAAMY,aAAa,GAAGnB,iBAAiB,CAACa,IAAD,CAAvC;AACA,UAAMO,QAAQ,GAAGF,QAAQ,GAAGC,aAA5B;;AACA,YAAKE,QAAL,CAAc;AAACN,QAAAA,WAAW,EAAGE,kBAAf;AAAmCV,QAAAA,UAAU,EAAGa;AAAhD,OAAd;;AACA,YAAKE,kBAAL,CAAwBL,kBAAxB;AACH,K;;UAEDM,uB,GAA0B,UAACV,IAAD,EAAS;AAC/B,UAAMC,QAAQ,GAAG,MAAKR,KAAL,CAAWS,WAAX,CAAuBF,IAAvB,CAAjB;;AACA,UAAIC,QAAQ,IAAI,CAAhB,EAAmB;AACf;AACH;;AACD,UAAME,QAAQ,GAAGF,QAAQ,GAAG,CAA5B;;AACA,UAAMG,kBAAkB,qBACjB,MAAKX,KAAL,CAAWS,WADM,CAAxB;;AAGAE,MAAAA,kBAAkB,CAACJ,IAAD,CAAlB,GAA2BG,QAA3B;AACA,UAAME,QAAQ,GAAG,MAAKZ,KAAL,CAAWC,UAA5B;AACA,UAAMiB,gBAAgB,GAAGxB,iBAAiB,CAACa,IAAD,CAA1C;AACA,UAAMO,QAAQ,GAAGF,QAAQ,GAAGM,gBAA5B;;AACA,YAAKH,QAAL,CAAc;AAACN,QAAAA,WAAW,EAAGE,kBAAf;AAAmCV,QAAAA,UAAU,EAAGa;AAAhD,OAAd;;AACA,YAAKE,kBAAL,CAAwBL,kBAAxB;AACH,K;;UAEDK,kB,GAAqB,UAACP,WAAD,EAAgB;AAEjC,UAAMU,GAAG,GAAGC,MAAM,CAACC,IAAP,CAAYZ,WAAZ,EAAyBa,GAAzB,CAA6B,UAAAC,MAAM,EAAE;AAC7C,eAAOd,WAAW,CAACc,MAAD,CAAlB;AACH,OAFW,EAETC,MAFS,CAEF,UAACL,GAAD,EAAKM,EAAL,EAAU;AAChB,eAAON,GAAG,GAACM,EAAX;AACH,OAJW,EAIV,CAJU,CAAZ;;AAKA,YAAKV,QAAL,CAAc;AAACb,QAAAA,WAAW,EAACiB,GAAG,GAAC;AAAjB,OAAd;AACH,K;;UAEDO,e,GAAgB,YAAI;AAChB,YAAKX,QAAL,CAAc;AAACZ,QAAAA,UAAU,EAAG;AAAd,OAAd;AACH,K;;UACDwB,Y,GAAe,YAAM;AACjB,YAAKZ,QAAL,CAAc;AAACZ,QAAAA,UAAU,EAAG;AAAd,OAAd;AACH,K;;UACDyB,uB,GAAwB,YAAI;AAEtB,UAAMC,WAAW,GAAG,EAApB;;AACA,WAAK,IAAIC,CAAT,IAAc,MAAK9B,KAAL,CAAWS,WAAzB,EAAsC;AAClCoB,QAAAA,WAAW,CAACE,IAAZ,CAAiBC,kBAAkB,CAACF,CAAD,CAAlB,GAAwB,GAAxB,GAA8BE,kBAAkB,CAAC,MAAKhC,KAAL,CAAWS,WAAX,CAAuBqB,CAAvB,CAAD,CAAjE;AACH;;AACDD,MAAAA,WAAW,CAACE,IAAZ,CAAiB,gBAAgB,MAAK/B,KAAL,CAAWC,UAA5C;AACA,UAAMgC,UAAU,GAAGJ,WAAW,CAACK,IAAZ,CAAiB,GAAjB,CAAnB;;AACA,YAAKC,KAAL,CAAWC,OAAX,CAAmBL,IAAnB,CAAwB;AACpBM,QAAAA,QAAQ,EAAG,WADS;AAEpBC,QAAAA,MAAM,EAAE,MAAIL;AAFQ,OAAxB;AAIL,K;;;;;;;wCAvEkB;AAAA;;AACf5C,MAAAA,KAAK,CAACkD,GAAN,CAAU,0DAAV,EACCC,IADD,CACM,UAAAC,QAAQ,EAAI;AAEd,QAAA,MAAI,CAAC1B,QAAL,CAAc;AAACN,UAAAA,WAAW,EAACgC,QAAQ,CAACC;AAAtB,SAAd;AACH,OAJD,EAKCC,KALD,CAKO,UAAAtC,KAAK,EAAI;AACZ,QAAA,MAAI,CAACU,QAAL,CAAc;AAACV,UAAAA,KAAK,EAACA;AAAP,SAAd;AACH,OAPD;AAQH;;;6BAiEO;AACI,UAAMuC,YAAY,qBACX,KAAKT,KADM,CAAlB;;AAGA,WAAI,IAAIU,GAAR,IAAeD,YAAf,EAA4B;AACxBA,QAAAA,YAAY,CAACC,GAAD,CAAZ,GAAoBD,YAAY,CAACC,GAAD,CAAZ,IAAqB,CAAzC;AACH;;AAED,UAAIC,YAAY,GAAG,IAAnB;AACA,UAAIC,MAAM,GAAG,KAAK/C,KAAL,CAAWK,KAAX,GAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAAlB,GAA6D,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAA1E;;AAEA,UAAG,KAAKL,KAAL,CAAWS,WAAd,EAA0B;AAEtBsC,QAAAA,MAAM,GACF,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,MAAD;AAAQ,UAAA,WAAW,EAAE,KAAK/C,KAAL,CAAWS,WAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,EAEI,oBAAC,aAAD;AACA,UAAA,aAAa,EAAE,KAAKH,oBADpB;AAEA,UAAA,gBAAgB,EAAE,KAAKW,uBAFvB;AAGA,UAAA,YAAY,EAAE2B,YAHd;AAIA,UAAA,KAAK,EAAE,KAAK5C,KAAL,CAAWC,UAJlB;AAKA,UAAA,OAAO,EAAE,KAAKyB,eALd;AAMA,UAAA,WAAW,EAAE,KAAK1B,KAAL,CAAWE,WANxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ,CADJ;AAYA4C,QAAAA,YAAY,GAAG,oBAAC,YAAD;AACK,UAAA,WAAW,EAAE,KAAK9C,KAAL,CAAWS,WAD7B;AAEK,UAAA,MAAM,EAAE,KAAKkB,YAFlB;AAGK,UAAA,QAAQ,EAAE,KAAKC,uBAHpB;AAIK,UAAA,KAAK,EAAE,KAAK5B,KAAL,CAAWC,UAJvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAf;AAMH;;AACD,UAAG,KAAKD,KAAL,CAAWI,OAAd,EAAsB;AAElB0C,QAAAA,YAAY,GAAG,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAf;AACH;;AAGT,aACQ,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AAAQ,QAAA,IAAI,EAAE,KAAK9C,KAAL,CAAWG,UAAzB;AAAqC,QAAA,WAAW,EAAE,KAAKwB,YAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKmB,YADL,CADJ,EAIKC,MAJL,CADR;AASH;;;;EAtIuBhE,S;;AA0I5B,IAAMiE,eAAe,GAAG,SAAlBA,eAAkB,CAAAhD,KAAK,EAAI;AAC7B,SAAO;AACHiD,IAAAA,IAAI,EAAGjD,KAAK,CAACS;AADV,GAAP;AAGH,CAJD;;AAMA,IAAMyC,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,QAAQ,EAAI;AACnC,SAAO;AACHC,IAAAA,iBAAiB,EAAG,2BAACC,OAAD;AAAA,aAAaF,QAAQ,CAAC;AAAC5C,QAAAA,IAAI,EAAGd,WAAW,CAAC6D,cAApB;AAAoCC,QAAAA,cAAc,EAAGF;AAArD,OAAD,CAArB;AAAA,KADjB;AAEHG,IAAAA,mBAAmB,EAAG,6BAACH,OAAD;AAAA,aAAaF,QAAQ,CAAE;AAAC5C,QAAAA,IAAI,EAAGd,WAAW,CAACgE,iBAApB;AAAuCF,QAAAA,cAAc,EAAGF;AAAxD,OAAF,CAArB;AAAA;AAFnB,GAAP;AAIH,CALD;;AAOA,eAAe7D,OAAO,CAACwD,eAAD,EAAkBE,kBAAlB,CAAP,CAA6C3D,gBAAgB,CAACQ,aAAD,EAAgBV,KAAhB,CAA7D,CAAf","sourcesContent":["import React, {Component} from 'react'\r\nimport Aux from '../../hoc/AuxFolder/lax';\r\nimport Burger from '../../Components/Burger/Burger'\r\nimport BuildControls from '../../Components/Burger/BuildControls/BuildControls'\r\nimport Modal from '../../Components/UI/Modal/Modal'\r\nimport OrderSummary from '../../Components/Burger/OrderSummary/OrderSummary'\r\nimport axios from '../../axios-orders'\r\nimport Spinner from '../../Components/UI/Spinner/Spinner'\r\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler'\r\nimport {connect} from 'react-redux'\r\nimport * as actionTypes from '../../store/actions'\r\n\r\nconst INGREDIENT_PRICES = {\r\n        salad : 0.5,\r\n        bacon : 8,\r\n        meat  : 6,\r\n        cheese: 3\r\n}\r\n\r\n\r\nclass BurgerBuilder extends Component {\r\n\r\n    \r\n    state = {\r\n        \r\n        totalPrice : 3,\r\n        purchasable : false,\r\n        purchasing : false,\r\n        loading : false,\r\n        error : null\r\n         \r\n    }\r\n\r\n    componentDidMount(){\r\n        axios.get('https://myburger-builder.firebaseio.com/ingredients.json')\r\n        .then(response => {\r\n            \r\n            this.setState({ingredients:response.data})\r\n        })\r\n        .catch(error => {\r\n            this.setState({error:error})\r\n        })\r\n    }\r\n\r\n\r\n    addIngredientHandler = (type) =>{\r\n        const oldCount = this.state.ingredients[type]\r\n        const newCount = oldCount + 1\r\n        const updatedIngredients = {\r\n            ...this.state.ingredients\r\n        }\r\n        updatedIngredients[type] = newCount\r\n        const oldPrice = this.state.totalPrice\r\n        const priceAddition = INGREDIENT_PRICES[type]\r\n        const newPrice = oldPrice + priceAddition\r\n        this.setState({ingredients : updatedIngredients, totalPrice : newPrice})\r\n        this.purchasableHandler(updatedIngredients)\r\n    }\r\n\r\n    removeIngredientHandler = (type) =>{\r\n        const oldCount = this.state.ingredients[type]\r\n        if (oldCount <= 0) {\r\n            return\r\n        }\r\n        const newCount = oldCount - 1\r\n        const updatedIngredients = {\r\n            ...this.state.ingredients\r\n        }\r\n        updatedIngredients[type] = newCount\r\n        const oldPrice = this.state.totalPrice\r\n        const priceSubtraction = INGREDIENT_PRICES[type]\r\n        const newPrice = oldPrice - priceSubtraction\r\n        this.setState({ingredients : updatedIngredients, totalPrice : newPrice})\r\n        this.purchasableHandler(updatedIngredients)\r\n    }\r\n\r\n    purchasableHandler = (ingredients) =>{\r\n        \r\n        const sum = Object.keys(ingredients).map(ingkey=>{\r\n            return ingredients[ingkey]\r\n        }).reduce((sum,el)=>{\r\n            return sum+el\r\n        },0)\r\n        this.setState({purchasable:sum>0})\r\n    }\r\n\r\n    purchaseHandler=()=>{\r\n        this.setState({purchasing : true})\r\n    }\r\n    modalHandler = () => {\r\n        this.setState({purchasing : false})\r\n    }\r\n    purchaseContinueHandler=()=>{\r\n    \r\n          const orderParams = []\r\n          for (let i in this.state.ingredients) {\r\n              orderParams.push(encodeURIComponent(i) + '=' + encodeURIComponent(this.state.ingredients[i]))\r\n          }\r\n          orderParams.push('totalPrice=' + this.state.totalPrice)\r\n          const paramsData = orderParams.join('&')\r\n          this.props.history.push({\r\n              pathname : '/CheckOut',\r\n              search :'?'+paramsData\r\n          })\r\n    } \r\n\r\n\r\n    render(){\r\n                const disabledInfo = {\r\n                    ...this.props\r\n                }\r\n                for(let key in disabledInfo){\r\n                    disabledInfo[key] = disabledInfo[key] <= 0\r\n                }\r\n\r\n                let orderSummary = null\r\n                let burger = this.state.error ?<p>Ingredients can not be displayed </p> : <Spinner />\r\n\r\n                if(this.state.ingredients){\r\n\r\n                    burger = (\r\n                        <Aux>\r\n                            <Burger ingredients={this.state.ingredients} />\r\n                            <BuildControls \r\n                            addIngredient={this.addIngredientHandler}\r\n                            removeIngredient={this.removeIngredientHandler}\r\n                            disableOrNot={disabledInfo}\r\n                            price={this.state.totalPrice}\r\n                            ordered={this.purchaseHandler}\r\n                            purchasable={this.state.purchasable}/>\r\n                        </Aux>\r\n                    )\r\n                    orderSummary = <OrderSummary \r\n                                        ingredients={this.state.ingredients}\r\n                                        cancel={this.modalHandler}\r\n                                        continue={this.purchaseContinueHandler}\r\n                                        price={this.state.totalPrice}/>\r\n                    \r\n                }\r\n                if(this.state.loading){\r\n                   \r\n                    orderSummary = <Spinner />\r\n                } \r\n                \r\n                \r\n        return (\r\n                <Aux>\r\n                    <Modal  show={this.state.purchasing} modalClosed={this.modalHandler}>\r\n                        {orderSummary}\r\n                    </Modal>\r\n                    {burger}\r\n                   \r\n                </Aux>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        ings : state.ingredients\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onIngredientAdded : (ingName) => dispatch({type : actionTypes.ADD_INGREDIENT, ingredientName : ingName}),\r\n        onIngredientRemoved : (ingName) => dispatch ({type : actionTypes.REMOVE_INGREDIENT, ingredientName : ingName})\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(BurgerBuilder, axios))"]},"metadata":{},"sourceType":"module"}