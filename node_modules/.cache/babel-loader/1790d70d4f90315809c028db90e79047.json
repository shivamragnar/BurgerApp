{"ast":null,"code":"import _defineProperty from \"D:\\\\shivam\\\\ftl_projects\\\\BurgerApp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport * as actionTypes from '../action/actionTypes';\nimport { updateObject } from '../utility';\nvar initialState = {\n  ingredients: null,\n  totalPrice: 3,\n  error: false,\n  building: false\n};\nvar INGREDIENT_PRICES = {\n  salad: 0.5,\n  bacon: 8,\n  meat: 6,\n  cheese: 3\n};\n\nvar addIngredient = function addIngredient(state, action) {\n  var updatedIngredient = _defineProperty({}, action.ingredientName, state.ingredients[action.ingredientName] + 1);\n\n  var updatedIngredients = updateObject(state.ingredients, updatedIngredient);\n  var updatedState = {\n    ingredients: updatedIngredients,\n    totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName],\n    building: true\n  };\n  return updateObject(state, updatedState);\n};\n\nvar removeIngredient = function removeIngredient(state, action) {\n  var updatedIng = _defineProperty({}, action.ingredientName, state.ingredients[action.ingredientName] - 1);\n\n  var updatedIngs = updateObject(state.ingredients, updatedIng);\n  var updatedSt = {\n    ingredients: updatedIngs,\n    totalPrice: state.totalPrice - INGREDIENT_PRICES[action.ingredientName]\n  };\n  return updateObject(state, updatedSt);\n};\n\nvar setIngredient = function setIngredient(state, action) {\n  return updateObject(state, {\n    ingredients: {\n      salad: action.ingredients.salad,\n      bacon: action.ingredients.bacon,\n      cheese: action.ingredients.cheese,\n      meat: action.ingredients.meat\n    },\n    totalPrice: 3,\n    error: false\n  });\n};\n\nvar fetchIngredient = function fetchIngredient(state, action) {\n  return updateObject(state, {\n    error: true\n  });\n};\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case actionTypes.ADD_INGREDIENT:\n      return addIngredient(state, action);\n\n    case actionTypes.REMOVE_INGREDIENT:\n      return removeIngredient(state, action);\n\n    case actionTypes.SET_INGREDIENT:\n      return setIngredient(state, action);\n\n    case actionTypes.FETCH_INGREDIENT_FAILED:\n      return fetchIngredient(state, action);\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["D:\\shivam\\ftl_projects\\BurgerApp\\src\\store\\reducer\\burgerBuilderReducer.js"],"names":["actionTypes","updateObject","initialState","ingredients","totalPrice","error","building","INGREDIENT_PRICES","salad","bacon","meat","cheese","addIngredient","state","action","updatedIngredient","ingredientName","updatedIngredients","updatedState","removeIngredient","updatedIng","updatedIngs","updatedSt","setIngredient","fetchIngredient","reducer","type","ADD_INGREDIENT","REMOVE_INGREDIENT","SET_INGREDIENT","FETCH_INGREDIENT_FAILED"],"mappings":"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","sourcesContent":["import * as actionTypes from '../action/actionTypes'\r\nimport {updateObject} from '../utility'\r\nconst initialState = {\r\n    \r\n    ingredients : null,\r\n    totalPrice : 3,\r\n    error : false,\r\n    building : false\r\n}\r\nconst INGREDIENT_PRICES = {\r\n    salad : 0.5,\r\n    bacon : 8,\r\n    meat  : 6,\r\n    cheese: 3\r\n}\r\n\r\nconst addIngredient = (state, action) => {\r\n    const updatedIngredient = {[action.ingredientName] : state.ingredients[action.ingredientName] + 1}\r\n    const updatedIngredients = updateObject(state.ingredients, updatedIngredient)\r\n    const updatedState = {\r\n        ingredients : updatedIngredients,\r\n        totalPrice : state.totalPrice + INGREDIENT_PRICES[action.ingredientName],\r\n        building : true\r\n    }\r\n    return updateObject(state, updatedState)\r\n}\r\n\r\nconst removeIngredient = (state, action) => {\r\n    const updatedIng = {[action.ingredientName] : state.ingredients[action.ingredientName] - 1}\r\n    const updatedIngs = updateObject(state.ingredients, updatedIng)\r\n    const updatedSt = {\r\n        ingredients : updatedIngs,\r\n        totalPrice : state.totalPrice - INGREDIENT_PRICES[action.ingredientName]\r\n    }\r\n    return updateObject(state, updatedSt)\r\n}\r\n\r\nconst setIngredient = (state, action) => {\r\n   \r\n    return updateObject(state, {\r\n        ingredients : {\r\n            salad : action.ingredients.salad,\r\n            bacon : action.ingredients.bacon,\r\n            cheese : action.ingredients.cheese,\r\n            meat : action.ingredients.meat\r\n        },\r\n        totalPrice : 3,\r\n        error : false\r\n    })\r\n}\r\n\r\nconst fetchIngredient = (state, action) => {\r\n    return updateObject(state, {error : true})\r\n}\r\n\r\nconst reducer = (state =  initialState, action) => {\r\n\r\n    switch(action.type){\r\n\r\n        case actionTypes.ADD_INGREDIENT : return addIngredient(state, action)\r\n       \r\n\r\n        case actionTypes.REMOVE_INGREDIENT : return removeIngredient(state, action)\r\n       \r\n\r\n        case actionTypes.SET_INGREDIENT : return setIngredient(state, action)\r\n        \r\n        \r\n        case actionTypes.FETCH_INGREDIENT_FAILED : return fetchIngredient(state, action)\r\n        \r\n           \r\n        default : return state\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default reducer"]},"metadata":{},"sourceType":"module"}