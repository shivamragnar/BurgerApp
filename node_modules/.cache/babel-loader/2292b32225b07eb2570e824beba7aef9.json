{"ast":null,"code":"import _objectSpread from \"R:\\\\ftl_projects\\\\burger_builder\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"R:\\\\ftl_projects\\\\burger_builder\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"R:\\\\ftl_projects\\\\burger_builder\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"R:\\\\ftl_projects\\\\burger_builder\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"R:\\\\ftl_projects\\\\burger_builder\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"R:\\\\ftl_projects\\\\burger_builder\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"R:\\\\ftl_projects\\\\burger_builder\\\\src\\\\Containers\\\\BurgurBuilder\\\\BurgerBuilder.js\";\nimport React, { Component } from 'react';\nimport Aux from '../../hoc/AuxFolder/Aux';\nimport Burger from '../../Components/Burger/Burger';\nimport BuildControls from '../../Components/Burger/BuildControls/BuildControls';\nimport Modal from '../../Components/UI/Modal/Modal';\nimport OrderSummary from '../../Components/Burger/OrderSummary/OrderSummary';\nimport axiosInstance from '../../axios-orders';\nimport Spinner from '../../Components/UI/Spinner/Spinner';\nvar INGREDIENT_PRICES = {\n  Salad: 0.5,\n  Bacon: 8,\n  Meat: 6,\n  Cheese: 3\n};\n\nvar BurgerBuilder =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(BurgerBuilder, _Component);\n\n  function BurgerBuilder() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, BurgerBuilder);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(BurgerBuilder)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      ingredients: {\n        Salad: 0,\n        Bacon: 0,\n        Meat: 0,\n        Cheese: 0\n      },\n      totalPrice: 3,\n      purchasable: false,\n      purchasing: false,\n      loading: false\n    };\n\n    _this.addIngredientHandler = function (type) {\n      var oldCount = _this.state.ingredients[type];\n      var newCount = oldCount + 1;\n\n      var updatedIngredients = _objectSpread({}, _this.state.ingredients);\n\n      updatedIngredients[type] = newCount;\n      var oldPrice = _this.state.totalPrice;\n      var priceAddition = INGREDIENT_PRICES[type];\n      var newPrice = oldPrice + priceAddition;\n\n      _this.setState({\n        ingredients: updatedIngredients,\n        totalPrice: newPrice\n      });\n\n      _this.purchasableHandler(updatedIngredients);\n    };\n\n    _this.removeIngredientHandler = function (type) {\n      var oldCount = _this.state.ingredients[type];\n\n      if (oldCount <= 0) {\n        return;\n      }\n\n      var newCount = oldCount - 1;\n\n      var updatedIngredients = _objectSpread({}, _this.state.ingredients);\n\n      updatedIngredients[type] = newCount;\n      var oldPrice = _this.state.totalPrice;\n      var priceSubtraction = INGREDIENT_PRICES[type];\n      var newPrice = oldPrice - priceSubtraction;\n\n      _this.setState({\n        ingredients: updatedIngredients,\n        totalPrice: newPrice\n      });\n\n      _this.purchasableHandler(updatedIngredients);\n    };\n\n    _this.purchasableHandler = function (ingredients) {\n      var sum = Object.keys(ingredients).map(function (ingkey) {\n        return ingredients[ingkey];\n      }).reduce(function (sum, el) {\n        return sum + el;\n      }, 0);\n\n      _this.setState({\n        purchasable: sum > 0\n      });\n    };\n\n    _this.purchaseHandler = function () {\n      _this.setState({\n        purchasing: true\n      });\n    };\n\n    _this.modalHandler = function () {\n      _this.setState({\n        purchasing: false\n      });\n    };\n\n    _this.purchaseContinueHandler = function () {\n      // alert('You will continue soon')\n      _this.setState({\n        loading: true\n      });\n\n      var data = {\n        ingredients: _this.state.ingredients,\n        price: _this.state.totalPrice,\n        customer: {\n          name: 'Shivam Sharma',\n          address: {\n            zipCode: 505050,\n            state: 'Delhi',\n            country: 'INDIA'\n          },\n          email: 'test-email.com'\n        },\n        deliveryMethod: 'fastest'\n      };\n      axiosInstance.post('/orders.json', data).then(function (response) {\n        _this.setState({\n          loading: false\n        });\n      }).catch(function (error) {\n        _this.setState({\n          loading: false\n        });\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(BurgerBuilder, [{\n    key: \"render\",\n    value: function render() {\n      var disabledInfo = _objectSpread({}, this.state.ingredients);\n\n      for (var key in disabledInfo) {\n        disabledInfo[key] = disabledInfo[key] <= 0;\n      }\n\n      var OrderSummary = React.createElement(OrderSummary, {\n        ingredients: this.state.ingredients,\n        cancel: this.modalHandler,\n        continue: this.purchaseContinueHandler,\n        price: this.state.totalPrice,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      });\n\n      if (this.state.loading) {\n        OrderSummary = React.createElement(Spinner, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 127\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(Aux, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, React.createElement(Modal, {\n        show: this.state.purchasing,\n        modalClosed: this.modalHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, OrderSummary), React.createElement(Burger, {\n        ingredients: this.state.ingredients,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }), React.createElement(BuildControls, {\n        addIngredient: this.addIngredientHandler,\n        removeIngredient: this.removeIngredientHandler,\n        disableOrNot: disabledInfo,\n        price: this.state.totalPrice,\n        ordered: this.purchaseHandler,\n        purchasable: this.state.purchasable,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return BurgerBuilder;\n}(Component);\n\nexport default BurgerBuilder;","map":{"version":3,"sources":["R:\\ftl_projects\\burger_builder\\src\\Containers\\BurgurBuilder\\BurgerBuilder.js"],"names":["React","Component","Aux","Burger","BuildControls","Modal","OrderSummary","axiosInstance","Spinner","INGREDIENT_PRICES","Salad","Bacon","Meat","Cheese","BurgerBuilder","state","ingredients","totalPrice","purchasable","purchasing","loading","addIngredientHandler","type","oldCount","newCount","updatedIngredients","oldPrice","priceAddition","newPrice","setState","purchasableHandler","removeIngredientHandler","priceSubtraction","sum","Object","keys","map","ingkey","reduce","el","purchaseHandler","modalHandler","purchaseContinueHandler","data","price","customer","name","address","zipCode","country","email","deliveryMethod","post","then","response","catch","error","disabledInfo","key"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\r\nimport Aux from '../../hoc/AuxFolder/Aux';\r\nimport Burger from '../../Components/Burger/Burger'\r\nimport BuildControls from '../../Components/Burger/BuildControls/BuildControls'\r\nimport Modal from '../../Components/UI/Modal/Modal'\r\nimport OrderSummary from '../../Components/Burger/OrderSummary/OrderSummary'\r\nimport axiosInstance from '../../axios-orders'\r\nimport Spinner from '../../Components/UI/Spinner/Spinner'\r\n\r\nconst INGREDIENT_PRICES = {\r\n        Salad : 0.5,\r\n        Bacon : 8,\r\n        Meat  : 6,\r\n        Cheese: 3\r\n}\r\n\r\n\r\nclass BurgerBuilder extends Component {\r\n\r\n    \r\n    state = {\r\n        ingredients : {\r\n            Salad : 0,\r\n            Bacon : 0,\r\n            Meat  : 0,\r\n            Cheese: 0\r\n        },\r\n        totalPrice : 3,\r\n        purchasable : false,\r\n        purchasing : false,\r\n        loading : false\r\n         \r\n    }\r\n\r\n    addIngredientHandler = (type) =>{\r\n        const oldCount = this.state.ingredients[type]\r\n        const newCount = oldCount + 1\r\n        const updatedIngredients = {\r\n            ...this.state.ingredients\r\n        }\r\n        updatedIngredients[type] = newCount\r\n        const oldPrice = this.state.totalPrice\r\n        const priceAddition = INGREDIENT_PRICES[type]\r\n        const newPrice = oldPrice + priceAddition\r\n        this.setState({ingredients : updatedIngredients, totalPrice : newPrice})\r\n        this.purchasableHandler(updatedIngredients)\r\n    }\r\n\r\n    removeIngredientHandler = (type) =>{\r\n        const oldCount = this.state.ingredients[type]\r\n        if (oldCount <= 0) {\r\n            return\r\n        }\r\n        const newCount = oldCount - 1\r\n        const updatedIngredients = {\r\n            ...this.state.ingredients\r\n        }\r\n        updatedIngredients[type] = newCount\r\n        const oldPrice = this.state.totalPrice\r\n        const priceSubtraction = INGREDIENT_PRICES[type]\r\n        const newPrice = oldPrice - priceSubtraction\r\n        this.setState({ingredients : updatedIngredients, totalPrice : newPrice})\r\n        this.purchasableHandler(updatedIngredients)\r\n    }\r\n\r\n    purchasableHandler = (ingredients) =>{\r\n        \r\n        const sum = Object.keys(ingredients).map(ingkey=>{\r\n            return ingredients[ingkey]\r\n        }).reduce((sum,el)=>{\r\n            return sum+el\r\n        },0)\r\n        this.setState({purchasable:sum>0})\r\n    }\r\n\r\n    purchaseHandler=()=>{\r\n        this.setState({purchasing : true})\r\n    }\r\n    modalHandler = () => {\r\n        this.setState({purchasing : false})\r\n    }\r\n    purchaseContinueHandler=()=>{\r\n       // alert('You will continue soon')\r\n       this.setState({loading:true})\r\n       const data = {\r\n           ingredients : this.state.ingredients,\r\n           price : this.state.totalPrice,\r\n           customer : {\r\n                    name : 'Shivam Sharma',\r\n                    address : {\r\n                        zipCode : 505050,\r\n                        state : 'Delhi',\r\n                        country : 'INDIA'\r\n                    },\r\n                    email : 'test-email.com'            \r\n            },\r\n            deliveryMethod : 'fastest'\r\n        }\r\n\r\n       axiosInstance.post('/orders.json', data)\r\n       .then(response => {\r\n          this.setState({loading:false})\r\n          \r\n       })\r\n       .catch(error => {\r\n        this.setState({loading:false})\r\n       })\r\n        \r\n    }\r\n\r\n\r\n    render(){\r\n                const disabledInfo = {\r\n                    ...this.state.ingredients\r\n                }\r\n                for(let key in disabledInfo){\r\n                    disabledInfo[key] = disabledInfo[key] <= 0\r\n                }\r\n\r\n                let OrderSummary = <OrderSummary \r\n                                        ingredients={this.state.ingredients}\r\n                                        cancel={this.modalHandler}\r\n                                        continue={this.purchaseContinueHandler}\r\n                                        price={this.state.totalPrice}/>\r\n                if(this.state.loading){\r\n                   \r\n                    OrderSummary = <Spinner />\r\n                } \r\n                \r\n                \r\n        return (\r\n                <Aux>\r\n                    <Modal  show={this.state.purchasing} modalClosed={this.modalHandler}>\r\n                        {OrderSummary}\r\n                    </Modal>\r\n                    <Burger ingredients={this.state.ingredients} />\r\n                    <BuildControls \r\n                    addIngredient={this.addIngredientHandler}\r\n                    removeIngredient={this.removeIngredientHandler}\r\n                    disableOrNot={disabledInfo}\r\n                    price={this.state.totalPrice}\r\n                    ordered={this.purchaseHandler}\r\n                    purchasable={this.state.purchasable}/>\r\n                </Aux>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default BurgerBuilder"]},"metadata":{},"sourceType":"module"}