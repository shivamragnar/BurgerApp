{"ast":null,"code":"import * as actionTypes from './actionTypes';\nimport axios from 'axios';\nexport var authStart = function authStart() {\n  return {\n    type: actionTypes.AUTH_START\n  };\n};\nexport var authSuccess = function authSuccess(token, userId) {\n  return {\n    type: actionTypes.AUTH_SUCCESS,\n    token: token,\n    userId: userId\n  };\n};\nexport var authFail = function authFail(error) {\n  return {\n    type: actionTypes.AUTH_FAIL,\n    error: error\n  };\n};\nexport var checkAuthTimeOut = function checkAuthTimeOut(expirationTime) {\n  return function (dispatch) {};\n};\nexport var auth = function auth(email, password, isSignUp) {\n  return function (dispatch) {\n    var authData = {\n      email: email,\n      password: password,\n      returnSecureToken: true\n    };\n    var url = 'https://www.googleapis.com/identitytoolkit/v3/relyingparty/signupNewUser?key=AIzaSyDilfJaHLQTbICQgEmX2kIs_ErkUeecSCY';\n\n    if (!isSignUp) {\n      url = 'https://www.googleapis.com/identitytoolkit/v3/relyingparty/verifyPassword?key=AIzaSyDilfJaHLQTbICQgEmX2kIs_ErkUeecSCY';\n    }\n\n    dispatch(authStart());\n    axios.post(url, authData).then(function (res) {\n      console.log(res);\n      dispatch(authSuccess(res.data.idToken, res.data.localId));\n      dispatch(checkAuthTimeOut(res.data.expiresIn));\n    }).catch(function (err) {\n      dispatch(authFail(err.response.data.error));\n    });\n  };\n};","map":{"version":3,"sources":["D:\\shivam\\ftl_projects\\BurgerApp\\src\\store\\action\\auth.js"],"names":["actionTypes","axios","authStart","type","AUTH_START","authSuccess","token","userId","AUTH_SUCCESS","authFail","error","AUTH_FAIL","checkAuthTimeOut","expirationTime","dispatch","auth","email","password","isSignUp","authData","returnSecureToken","url","post","then","res","console","log","data","idToken","localId","expiresIn","catch","err","response"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,eAA7B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,IAAMC,SAAS,GAAG,SAAZA,SAAY,GAAM;AAC3B,SAAO;AACHC,IAAAA,IAAI,EAAGH,WAAW,CAACI;AADhB,GAAP;AAGH,CAJM;AAMP,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD,EAAQC,MAAR,EAAmB;AAC1C,SAAO;AACHJ,IAAAA,IAAI,EAAGH,WAAW,CAACQ,YADhB;AAEHF,IAAAA,KAAK,EAAGA,KAFL;AAGHC,IAAAA,MAAM,EAAGA;AAHN,GAAP;AAKH,CANM;AASP,OAAO,IAAME,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD,EAAW;AAC/B,SAAO;AACHP,IAAAA,IAAI,EAAGH,WAAW,CAACW,SADhB;AAEHD,IAAAA,KAAK,EAAGA;AAFL,GAAP;AAIH,CALM;AAOP,OAAO,IAAME,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,cAAD,EAAoB;AAChD,SAAO,UAAAC,QAAQ,EAAI,CAElB,CAFD;AAGH,CAJM;AAMP,OAAO,IAAMC,IAAI,GAAG,SAAPA,IAAO,CAACC,KAAD,EAAQC,QAAR,EAAkBC,QAAlB,EAA+B;AAE/C,SAAO,UAAAJ,QAAQ,EAAI;AAChB,QAAMK,QAAQ,GAAG;AACbH,MAAAA,KAAK,EAAGA,KADK;AAEbC,MAAAA,QAAQ,EAAGA,QAFE;AAGbG,MAAAA,iBAAiB,EAAG;AAHP,KAAjB;AAKA,QAAIC,GAAG,GAAG,sHAAV;;AACA,QAAG,CAACH,QAAJ,EAAa;AACTG,MAAAA,GAAG,GAAG,uHAAN;AACH;;AACAP,IAAAA,QAAQ,CAACZ,SAAS,EAAV,CAAR;AACAD,IAAAA,KAAK,CAACqB,IAAN,CAAWD,GAAX,EAAgBF,QAAhB,EACMI,IADN,CACW,UAAAC,GAAG,EAAI;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACAV,MAAAA,QAAQ,CAACT,WAAW,CAACmB,GAAG,CAACG,IAAJ,CAASC,OAAV,EAAmBJ,GAAG,CAACG,IAAJ,CAASE,OAA5B,CAAZ,CAAR;AACAf,MAAAA,QAAQ,CAACF,gBAAgB,CAACY,GAAG,CAACG,IAAJ,CAASG,SAAV,CAAjB,CAAR;AACF,KALN,EAMMC,KANN,CAMY,UAAAC,GAAG,EAAI;AACVlB,MAAAA,QAAQ,CAACL,QAAQ,CAACuB,GAAG,CAACC,QAAJ,CAAaN,IAAb,CAAkBjB,KAAnB,CAAT,CAAR;AACH,KARN;AASH,GApBD;AAqBH,CAvBM","sourcesContent":["import * as actionTypes from './actionTypes'\r\nimport axios from 'axios'\r\n\r\nexport const authStart = () => {\r\n    return {\r\n        type : actionTypes.AUTH_START\r\n    }\r\n}\r\n\r\nexport const authSuccess = (token, userId) => {\r\n    return {\r\n        type : actionTypes.AUTH_SUCCESS,\r\n        token : token,\r\n        userId : userId\r\n    }\r\n}\r\n\r\n\r\nexport const authFail = (error) => {\r\n    return {\r\n        type : actionTypes.AUTH_FAIL,\r\n        error : error\r\n    }\r\n}\r\n\r\nexport const checkAuthTimeOut = (expirationTime) => {\r\n    return dispatch => {\r\n        \r\n    }\r\n}\r\n\r\nexport const auth = (email, password, isSignUp) => {\r\n   \r\n    return dispatch => {\r\n       const authData = {\r\n           email : email,\r\n           password : password,\r\n           returnSecureToken : true\r\n       }\r\n       let url = 'https://www.googleapis.com/identitytoolkit/v3/relyingparty/signupNewUser?key=AIzaSyDilfJaHLQTbICQgEmX2kIs_ErkUeecSCY'\r\n       if(!isSignUp){\r\n           url = 'https://www.googleapis.com/identitytoolkit/v3/relyingparty/verifyPassword?key=AIzaSyDilfJaHLQTbICQgEmX2kIs_ErkUeecSCY'\r\n       }\r\n        dispatch(authStart())\r\n        axios.post(url, authData)\r\n             .then(res => {\r\n                console.log(res)\r\n                dispatch(authSuccess(res.data.idToken, res.data.localId))\r\n                dispatch(checkAuthTimeOut(res.data.expiresIn))\r\n             })\r\n             .catch(err => {    \r\n                 dispatch(authFail(err.response.data.error))\r\n             })\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}