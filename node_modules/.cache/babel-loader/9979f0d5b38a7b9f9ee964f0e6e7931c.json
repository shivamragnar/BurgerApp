{"ast":null,"code":"import _objectSpread from \"R:\\\\ftl_projects\\\\BurgerApp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"R:\\\\ftl_projects\\\\BurgerApp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"R:\\\\ftl_projects\\\\BurgerApp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"R:\\\\ftl_projects\\\\BurgerApp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"R:\\\\ftl_projects\\\\BurgerApp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"R:\\\\ftl_projects\\\\BurgerApp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"R:\\\\ftl_projects\\\\BurgerApp\\\\src\\\\Containers\\\\CheckOut\\\\ContactData\\\\ContactData.js\";\nimport React, { Component } from 'react';\nimport Button from '../../../Components/UI/Button/Button';\nimport styles from './ContactData.css';\nimport axios from '../../../axios-orders';\nimport Spinner from '../../../Components/UI/Spinner/Spinner';\nimport Input from '../../../Components/UI/Input/Input';\nimport { Redirect } from 'react-router-dom';\n\nvar ContactData =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ContactData, _Component);\n\n  function ContactData() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ContactData);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ContactData)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      orderForm: {\n        name: {\n          elementType: 'input',\n          elementConfig: {\n            type: 'text',\n            placeholder: 'Your Name'\n          },\n          value: ''\n        },\n        street: {\n          elementType: 'input',\n          elementConfig: {\n            type: 'text',\n            placeholder: 'Street'\n          },\n          value: ''\n        },\n        zipCode: {\n          elementType: 'input',\n          elementConfig: {\n            type: 'text',\n            placeholder: 'ZIP Code'\n          },\n          value: ''\n        },\n        country: {\n          elementType: 'input',\n          elementConfig: {\n            type: 'text',\n            placeholder: 'Your Country'\n          },\n          value: ''\n        },\n        email: {\n          elementType: 'input',\n          elementConfig: {\n            type: 'email',\n            placeholder: 'Your Mail'\n          },\n          value: ''\n        },\n        deliveryMethod: {\n          elementType: 'select',\n          elementConfig: {\n            options: [{\n              value: 'fastest',\n              displayValue: 'Fastest'\n            }, {\n              value: 'Cheapest',\n              displayValue: 'Cheapest'\n            }]\n          },\n          value: ''\n        }\n      },\n      loading: false,\n      home: false\n    };\n\n    _this.orderHandler = function (event) {\n      event.preventDefault();\n\n      _this.setState({\n        loading: true\n      });\n\n      var data = {\n        ingredients: _this.props.ingredients,\n        price: _this.props.price\n      };\n      axios.post('/orders.json', data).then(function (response) {\n        _this.setState({\n          loading: false,\n          home: true\n        });\n      }).catch(function (error) {\n        _this.setState({\n          loading: false\n        });\n      });\n    };\n\n    _this.onChangeHandler = function (event, inputElementIdentifier) {\n      var updatedForm = _objectSpread({}, _this.state.orderForm);\n\n      var updatedFormElement = _objectSpread({}, updatedForm[inputElementIdentifier]);\n\n      updatedFormElement.value = event.target.value;\n      updatedForm[inputElementIdentifier] = updatedFormElement;\n\n      _this.setState({\n        orderForm: updatedForm\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(ContactData, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var redirect = null;\n\n      if (this.state.home) {\n        redirect = React.createElement(Redirect, {\n          to: \"/\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110\n          },\n          __self: this\n        });\n      }\n\n      var formElementsArray = [];\n\n      for (var key in this.state.orderForm) {\n        formElementsArray.push({\n          id: key,\n          config: this.state.orderForm[key]\n        });\n      }\n\n      var form = React.createElement(\"form\", {\n        onSubmit: this.orderHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, formElementsArray.map(function (formElement) {\n        return React.createElement(Input, {\n          key: formElement.id,\n          elementtype: formElement.config.elementType,\n          elementConfig: formElement.config.elementConfig,\n          value: formElement.config.value,\n          change: function change(event) {\n            return _this2.onChangeHandler(event, formElement.id);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122\n          },\n          __self: this\n        });\n      }), React.createElement(Button, {\n        btnType: \"Success\",\n        clicked: this.orderHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, \"Place Order \"));\n\n      if (this.state.loading) {\n        form = React.createElement(Spinner, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 137\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(\"div\", {\n        className: styles.ContactData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, \"Please Enter Your Contact Details\"), form, redirect);\n    }\n  }]);\n\n  return ContactData;\n}(Component);\n\nexport default ContactData;","map":{"version":3,"sources":["R:\\ftl_projects\\BurgerApp\\src\\Containers\\CheckOut\\ContactData\\ContactData.js"],"names":["React","Component","Button","styles","axios","Spinner","Input","Redirect","ContactData","state","orderForm","name","elementType","elementConfig","type","placeholder","value","street","zipCode","country","email","deliveryMethod","options","displayValue","loading","home","orderHandler","event","preventDefault","setState","data","ingredients","props","price","post","then","response","catch","error","onChangeHandler","inputElementIdentifier","updatedForm","updatedFormElement","target","redirect","formElementsArray","key","push","id","config","form","map","formElement"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\r\nimport Button from '../../../Components/UI/Button/Button'\r\nimport styles from './ContactData.css'\r\nimport axios from '../../../axios-orders'\r\nimport Spinner from '../../../Components/UI/Spinner/Spinner'\r\nimport Input from '../../../Components/UI/Input/Input'\r\n\r\nimport {Redirect} from 'react-router-dom'\r\n\r\n\r\n\r\n\r\nclass ContactData extends Component {\r\n\r\n    state = {\r\n        orderForm :{\r\n\r\n                name : {\r\n                    elementType:'input',\r\n                    elementConfig:{\r\n                        type:'text',\r\n                        placeholder:'Your Name'\r\n                    },\r\n                    value : ''\r\n                },\r\n                street : {\r\n                    elementType:'input',\r\n                    elementConfig:{\r\n                        type:'text',\r\n                        placeholder:'Street'\r\n                    },\r\n                    value : ''\r\n                },\r\n                zipCode : {\r\n                    elementType:'input',\r\n                    elementConfig:{\r\n                        type:'text',\r\n                        placeholder:'ZIP Code'\r\n                    },\r\n                    value : ''\r\n                },\r\n                country : {\r\n                    elementType:'input',\r\n                    elementConfig:{\r\n                        type:'text',\r\n                        placeholder:'Your Country'\r\n                    },\r\n                    value : ''\r\n                },\r\n                email : {\r\n                    elementType:'input',\r\n                    elementConfig:{\r\n                        type:'email',\r\n                        placeholder:'Your Mail'\r\n                    },\r\n                    value : ''\r\n                },\r\n                deliveryMethod : {\r\n                    elementType:'select',\r\n                    elementConfig:{\r\n                      options : [\r\n                          {value:'fastest', displayValue:'Fastest'},\r\n                          {value:'Cheapest', displayValue:'Cheapest'}\r\n                        ]\r\n                    },\r\n                    value : ''\r\n                },\r\n        },\r\n        loading : false,\r\n        home : false\r\n    }\r\n    orderHandler =  (event) =>{\r\n            event.preventDefault()\r\n          \r\n\r\n               this.setState({loading:true})\r\n               const data = {\r\n                   ingredients : this.props.ingredients,\r\n                   price : this.props.price,\r\n                    \r\n                }\r\n\r\n               axios.post('/orders.json', data)\r\n               .then(response => {\r\n                  \r\n                  this.setState({loading:false, home:true})\r\n                  \r\n               })\r\n               .catch(error => {\r\n                this.setState({loading:false})\r\n                \r\n               })\r\n    }\r\n\r\n    onChangeHandler = (event, inputElementIdentifier)=>{\r\n        const updatedForm = {\r\n            ...this.state.orderForm\r\n        }\r\n        const updatedFormElement = {\r\n            ...updatedForm[inputElementIdentifier]\r\n        }\r\n        updatedFormElement.value = event.target.value\r\n        updatedForm[inputElementIdentifier] = updatedFormElement\r\n        this.setState({orderForm:updatedForm})\r\n    }\r\n\r\n    render(){\r\n        let redirect = null\r\n        if(this.state.home){\r\n            redirect = <Redirect to='/' />\r\n        }\r\n        const formElementsArray = []\r\n        for(let key in this.state.orderForm){\r\n            formElementsArray.push({\r\n                id: key,\r\n                config : this.state.orderForm[key]\r\n            })\r\n        }\r\n       \r\n        let form = (<form onSubmit={this.orderHandler}>\r\n                        {formElementsArray.map(formElement=>(\r\n                            <Input \r\n                                key={formElement.id}\r\n                                \r\n                                elementtype={formElement.config.elementType}\r\n                                elementConfig={formElement.config.elementConfig}\r\n                                value={formElement.config.value} \r\n                                change={(event)=>this.onChangeHandler(event, formElement.id)}/>\r\n\r\n                        ))}\r\n                         \r\n                         <Button btnType='Success' clicked={this.orderHandler}>Place Order </Button>\r\n                    \r\n                    </form> \r\n                    )\r\n        if(this.state.loading){\r\n            form = <Spinner />\r\n        }\r\n\r\n        return(\r\n            <div className={styles.ContactData}>\r\n                <h3>Please Enter Your Contact Details</h3>\r\n                {form}\r\n                {redirect}           \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default ContactData"]},"metadata":{},"sourceType":"module"}