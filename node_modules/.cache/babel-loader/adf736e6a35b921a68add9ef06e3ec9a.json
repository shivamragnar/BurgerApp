{"ast":null,"code":"import _classCallCheck from \"D:\\\\shivam\\\\ftl_projects\\\\BurgerApp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\shivam\\\\ftl_projects\\\\BurgerApp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\shivam\\\\ftl_projects\\\\BurgerApp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\shivam\\\\ftl_projects\\\\BurgerApp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\shivam\\\\ftl_projects\\\\BurgerApp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\shivam\\\\ftl_projects\\\\BurgerApp\\\\src\\\\Containers\\\\Orders\\\\Orders.js\";\nimport React, { Component } from 'react';\nimport Order from '../../Components/Order/Order';\nimport axios from '../../axios-orders';\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\nimport * as actions from '../../store/action/index';\nimport { connect } from 'react-redux';\nimport Spinner from '../../Components/UI/Spinner/Spinner';\n\nvar Orders =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Orders, _Component);\n\n  function Orders() {\n    _classCallCheck(this, Orders);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Orders).apply(this, arguments));\n  }\n\n  _createClass(Orders, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.onfetchOrders();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var order = React.createElement(Spinner, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      });\n\n      if (!this.props.loading) {\n        order = this.props.orders.map(function (order) {\n          return React.createElement(Order, {\n            key: order.id,\n            price: order.price,\n            ingredients: order.ingredients,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 21\n            },\n            __self: this\n          });\n        });\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, order);\n    }\n  }]);\n\n  return Orders;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    orders: state.order.orders,\n    loading: state.order.loading,\n    token: state.auth.token\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    onfetchOrders: function onfetchOrders(token) {\n      return dispatch(actions.fetchOrder());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(Orders, axios));","map":{"version":3,"sources":["D:\\shivam\\ftl_projects\\BurgerApp\\src\\Containers\\Orders\\Orders.js"],"names":["React","Component","Order","axios","withErrorHandler","actions","connect","Spinner","Orders","props","onfetchOrders","order","loading","orders","map","id","price","ingredients","mapStateToProps","state","token","auth","mapDispatchToProps","dispatch","fetchOrder"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,KAAP,MAAkB,8BAAlB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,gBAAP,MAA6B,6CAA7B;AACA,OAAO,KAAKC,OAAZ,MAAyB,0BAAzB;AACA,SAAQC,OAAR,QAAuB,aAAvB;AACA,OAAOC,OAAP,MAAoB,qCAApB;;IAEMC,M;;;;;;;;;;;;;wCAIiB;AACf,WAAKC,KAAL,CAAWC,aAAX;AACH;;;6BAEW;AACJ,UAAIC,KAAK,GAAG,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAZ;;AACA,UAAG,CAAC,KAAKF,KAAL,CAAWG,OAAf,EAAwB;AACpBD,QAAAA,KAAK,GAAG,KAAKF,KAAL,CAAWI,MAAX,CAAkBC,GAAlB,CAAsB,UAAAH,KAAK;AAAA,iBACK,oBAAC,KAAD;AACI,YAAA,GAAG,EAAEA,KAAK,CAACI,EADf;AAEI,YAAA,KAAK,EAAEJ,KAAK,CAACK,KAFjB;AAGI,YAAA,WAAW,EAAEL,KAAK,CAACM,WAHvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADL;AAAA,SAA3B,CAAR;AAKH;;AACD,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACIN,KADJ,CADJ;AAKH;;;;EAtBYV,S;;AAyBrB,IAAMiB,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAW;AAC/B,SAAO;AACHN,IAAAA,MAAM,EAAGM,KAAK,CAACR,KAAN,CAAYE,MADlB;AAEHD,IAAAA,OAAO,EAAGO,KAAK,CAACR,KAAN,CAAYC,OAFnB;AAGHQ,IAAAA,KAAK,EAAGD,KAAK,CAACE,IAAN,CAAWD;AAHhB,GAAP;AAKH,CAND;;AAQA,IAAME,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,QAAQ,EAAI;AACnC,SAAO;AACHb,IAAAA,aAAa,EAAG,uBAACU,KAAD;AAAA,aAAWG,QAAQ,CAAClB,OAAO,CAACmB,UAAR,EAAD,CAAnB;AAAA;AADb,GAAP;AAGH,CAJD;;AAMA,eAAelB,OAAO,CAACY,eAAD,EAAkBI,kBAAlB,CAAP,CAA6ClB,gBAAgB,CAACI,MAAD,EAAQL,KAAR,CAA7D,CAAf","sourcesContent":["import React, {Component} from 'react'\r\nimport Order from '../../Components/Order/Order'\r\nimport axios from '../../axios-orders'\r\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler'\r\nimport * as actions from '../../store/action/index'\r\nimport {connect } from 'react-redux'\r\nimport Spinner from '../../Components/UI/Spinner/Spinner'\r\n\r\nclass Orders extends Component {\r\n\r\n   \r\n\r\n    componentDidMount(){\r\n        this.props.onfetchOrders()\r\n    }\r\n\r\n        render(){\r\n            let order = <Spinner />\r\n            if(!this.props.loading) {\r\n                order = this.props.orders.map(order => (  \r\n                                                        <Order \r\n                                                            key={order.id}          \r\n                                                            price={order.price} \r\n                                                            ingredients={order.ingredients}/>))\r\n            }\r\n            return(\r\n                <div>\r\n                   {order}\r\n                </div>\r\n            )\r\n        }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        orders : state.order.orders,\r\n        loading : state.order.loading,\r\n        token : state.auth.token\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onfetchOrders : (token) => dispatch(actions.fetchOrder())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(Orders,axios))"]},"metadata":{},"sourceType":"module"}