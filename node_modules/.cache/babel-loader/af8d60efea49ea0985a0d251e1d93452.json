{"ast":null,"code":"import _objectSpread from \"D:\\\\shivam\\\\ftl_projects\\\\BurgerApp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport * as actionTypes from '../action/actionTypes';\nimport { updateObject } from '../utility';\nimport { purchaseBurgerStart } from '../action/order';\nvar initialState = {\n  orders: [],\n  loading: false,\n  purchasing: false\n};\n\nvar purchaseInit = function purchaseInit(state, action) {\n  return updateObject(state, {\n    purchasing: false\n  });\n};\n\nvar purchseBurgerStart = function purchseBurgerStart(state, action) {\n  return updateObject(state, {\n    loading: true\n  });\n};\n\nvar purchaseBurgerSuccess = function purchaseBurgerSuccess(state, action) {\n  var newOrder = updateObject(state, _objectSpread({}, action.orderData, {\n    id: action.orderId\n  }));\n  var updatedState = {\n    orders: state.orders.concat(newOrder),\n    loading: false,\n    purchasing: true\n  };\n  return updateObject(state, updatedState);\n};\n\nvar purchaseBurgerFail = function purchaseBurgerFail(state, action) {\n  return updateObject(state, {\n    loading: false\n  });\n};\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case actionTypes.PURCHASE_INIT:\n      return purchaseInit(state, action);\n\n    case actionTypes.PURCHASE_BURGER_START:\n      return purchaseBurgerStart(state, action);\n\n    case actionTypes.PURCHASE_BURGER_SUCCESS:\n      return purchaseBurgerSuccess(state, action);\n\n    case actionTypes.PURCHASE_BURGER_FAIL:\n    case actionTypes.FETCH_ORDER_START:\n      return updateObject(state, {\n        loading: true\n      });\n\n    case actionTypes.FETCH_ORDER_SUCCESS:\n      return updateObject(state, {\n        orders: action.orders,\n        loading: false\n      });\n\n    case actionTypes.FETCH_ORDER_FAIL:\n      return updateObject(state, {\n        loading: false\n      });\n\n    default:\n      return _objectSpread({}, state);\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["D:\\shivam\\ftl_projects\\BurgerApp\\src\\store\\reducer\\order.js"],"names":["actionTypes","updateObject","purchaseBurgerStart","initialState","orders","loading","purchasing","purchaseInit","state","action","purchseBurgerStart","purchaseBurgerSuccess","newOrder","orderData","id","orderId","updatedState","concat","purchaseBurgerFail","reducer","type","PURCHASE_INIT","PURCHASE_BURGER_START","PURCHASE_BURGER_SUCCESS","PURCHASE_BURGER_FAIL","FETCH_ORDER_START","FETCH_ORDER_SUCCESS","FETCH_ORDER_FAIL"],"mappings":";AAAA,OAAO,KAAKA,WAAZ,MAA6B,uBAA7B;AACA,SAAQC,YAAR,QAA2B,YAA3B;AACA,SAASC,mBAAT,QAAoC,iBAApC;AAEA,IAAMC,YAAY,GAAG;AACjBC,EAAAA,MAAM,EAAG,EADQ;AAEjBC,EAAAA,OAAO,EAAG,KAFO;AAGjBC,EAAAA,UAAU,EAAG;AAHI,CAArB;;AAOA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,KAAD,EAAQC,MAAR,EAAmB;AACpC,SAAOR,YAAY,CAACO,KAAD,EAAQ;AAACF,IAAAA,UAAU,EAAG;AAAd,GAAR,CAAnB;AACH,CAFD;;AAIA,IAAMI,kBAAkB,GAAG,SAArBA,kBAAqB,CAACF,KAAD,EAAQC,MAAR,EAAmB;AAC1C,SAAOR,YAAY,CAACO,KAAD,EAAQ;AAACH,IAAAA,OAAO,EAAG;AAAX,GAAR,CAAnB;AACH,CAFD;;AAIA,IAAMM,qBAAqB,GAAG,SAAxBA,qBAAwB,CAACH,KAAD,EAAQC,MAAR,EAAmB;AAC7C,MAAMG,QAAQ,GAAGX,YAAY,CAACO,KAAD,oBAAaC,MAAM,CAACI,SAApB;AAA+BC,IAAAA,EAAE,EAAGL,MAAM,CAACM;AAA3C,KAA7B;AACI,MAAMC,YAAY,GAAG;AACjBZ,IAAAA,MAAM,EAAGI,KAAK,CAACJ,MAAN,CAAaa,MAAb,CAAoBL,QAApB,CADQ;AAEjBP,IAAAA,OAAO,EAAG,KAFO;AAGjBC,IAAAA,UAAU,EAAG;AAHI,GAArB;AAKJ,SAAOL,YAAY,CAACO,KAAD,EAAQQ,YAAR,CAAnB;AACH,CARD;;AAUA,IAAME,kBAAkB,GAAG,SAArBA,kBAAqB,CAACV,KAAD,EAAQC,MAAR,EAAmB;AAE1C,SAAOR,YAAY,CAACO,KAAD,EAAQ;AAACH,IAAAA,OAAO,EAAG;AAAX,GAAR,CAAnB;AAEH,CAJD;;AAMA,IAAMc,OAAO,GAAG,SAAVA,OAAU,GAAkC;AAAA,MAAjCX,KAAiC,uEAAzBL,YAAyB;AAAA,MAAXM,MAAW;;AAE9C,UAAOA,MAAM,CAACW,IAAd;AAEI,SAAKpB,WAAW,CAACqB,aAAjB;AAAiC,aAAOd,YAAY,CAACC,KAAD,EAAQC,MAAR,CAAnB;;AAIjC,SAAKT,WAAW,CAACsB,qBAAjB;AAAyC,aAAOpB,mBAAmB,CAACM,KAAD,EAAQC,MAAR,CAA1B;;AAGzC,SAAKT,WAAW,CAACuB,uBAAjB;AAA2C,aAAOZ,qBAAqB,CAACH,KAAD,EAAQC,MAAR,CAA5B;;AAG3C,SAAKT,WAAW,CAACwB,oBAAjB;AAGA,SAAKxB,WAAW,CAACyB,iBAAjB;AACA,aAAOxB,YAAY,CAACO,KAAD,EAAQ;AAACH,QAAAA,OAAO,EAAG;AAAX,OAAR,CAAnB;;AAGA,SAAKL,WAAW,CAAC0B,mBAAjB;AACA,aAAOzB,YAAY,CAACO,KAAD,EAAQ;AACvBJ,QAAAA,MAAM,EAAGK,MAAM,CAACL,MADO;AAEvBC,QAAAA,OAAO,EAAG;AAFa,OAAR,CAAnB;;AAKA,SAAKL,WAAW,CAAC2B,gBAAjB;AACA,aAAO1B,YAAY,CAACO,KAAD,EAAQ;AAACH,QAAAA,OAAO,EAAG;AAAX,OAAR,CAAnB;;AAEA;AACA,+BACQG,KADR;AA7BJ;AAiCH,CAnCD;;AAqCA,eAAeW,OAAf","sourcesContent":["import * as actionTypes from '../action/actionTypes'\r\nimport {updateObject} from '../utility'\r\nimport { purchaseBurgerStart } from '../action/order';\r\n\r\nconst initialState = {\r\n    orders : [],\r\n    loading : false,\r\n    purchasing : false\r\n\r\n}\r\n\r\nconst purchaseInit = (state, action) => {\r\n    return updateObject(state, {purchasing : false})\r\n}\r\n\r\nconst purchseBurgerStart = (state, action) => {\r\n    return updateObject(state, {loading : true})\r\n}\r\n\r\nconst purchaseBurgerSuccess = (state, action) => {\r\n    const newOrder = updateObject(state, { ...action.orderData, id : action.orderId})\r\n        const updatedState = {\r\n            orders : state.orders.concat(newOrder),\r\n            loading : false,\r\n            purchasing : true   \r\n        }\r\n    return updateObject(state, updatedState)   \r\n}\r\n\r\nconst purchaseBurgerFail = (state, action) => {\r\n   \r\n    return updateObject(state, {loading : false})\r\n\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n\r\n    switch(action.type) {\r\n\r\n        case actionTypes.PURCHASE_INIT : return purchaseInit(state, action)\r\n        \r\n        \r\n         \r\n        case actionTypes.PURCHASE_BURGER_START : return purchaseBurgerStart(state, action)\r\n       \r\n        \r\n        case actionTypes.PURCHASE_BURGER_SUCCESS : return purchaseBurgerSuccess(state, action)\r\n        \r\n\r\n        case actionTypes.PURCHASE_BURGER_FAIL : \r\n               \r\n\r\n        case actionTypes.FETCH_ORDER_START : \r\n        return updateObject(state, {loading : true})\r\n         \r\n\r\n        case actionTypes.FETCH_ORDER_SUCCESS : \r\n        return updateObject(state, { \r\n            orders : action.orders,\r\n            loading : false})\r\n           \r\n\r\n        case actionTypes.FETCH_ORDER_FAIL : \r\n        return updateObject(state, {loading : false})\r\n         \r\n        default : \r\n        return {\r\n             ...state\r\n        }\r\n    }\r\n}\r\n\r\nexport default reducer"]},"metadata":{},"sourceType":"module"}