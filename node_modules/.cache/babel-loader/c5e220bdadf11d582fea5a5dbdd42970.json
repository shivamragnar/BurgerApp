{"ast":null,"code":"import _toConsumableArray from \"R:\\\\ftl_projects\\\\BurgerApp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nvar _jsxFileName = \"R:\\\\ftl_projects\\\\BurgerApp\\\\src\\\\Components\\\\Burger\\\\Burger.js\";\nimport React from 'react';\nimport styles from './Burger.css';\nimport BurgerIngredients from './BurgerIngredients/BurgerIngredients';\n\nvar Burger = function Burger(props) {\n  console.log(props.ingredients);\n  var transformedArray = Object.keys(props.ingredients).map(function (ingkey) {\n    return _toConsumableArray(Array(props.ingredients[ingkey]));\n  }); // .map( ( _ , index ) =>{ \n  //     return <BurgerIngredients key={ingkey + index} type={ingkey} />})\n  // }).reduce((accumulator,curr)=>{return accumulator.concat(curr)},[])\n  // if (transformedArray.length===0 ){\n  //     transformedArray = <p>hey add some ingredients</p>\n  // }\n\n  return React.createElement(\"div\", {\n    className: styles.Burger,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(BurgerIngredients, {\n    type: \"Bread-Top\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }), transformedArray, React.createElement(BurgerIngredients, {\n    type: \"Bread-Bottom\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }));\n};\n\nexport default Burger;","map":{"version":3,"sources":["R:\\ftl_projects\\BurgerApp\\src\\Components\\Burger\\Burger.js"],"names":["React","styles","BurgerIngredients","Burger","props","console","log","ingredients","transformedArray","Object","keys","map","ingkey","Array"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,iBAAP,MAA8B,uCAA9B;;AAGA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAACC,KAAD,EAAW;AACtBC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,WAAlB;AACA,MAAIC,gBAAgB,GAAGC,MAAM,CAACC,IAAP,CAAYN,KAAK,CAACG,WAAlB,EACtBI,GADsB,CAClB,UAAAC,MAAM,EAAG;AACV,8BAAWC,KAAK,CAACT,KAAK,CAACG,WAAN,CAAkBK,MAAlB,CAAD,CAAhB;AAA6C,GAF1B,CAAvB,CAFsB,CAOtB;AACA;AAEA;AAEA;AACA;AACA;;AAGA,SACQ;AAAK,IAAA,SAAS,EAAIX,MAAM,CAACE,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,iBAAD;AAAmB,IAAA,IAAI,EAAG,WAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEKK,gBAFL,EAGI,oBAAC,iBAAD;AAAmB,IAAA,IAAI,EAAG,cAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CADR;AAQH,CAzBD;;AA2BA,eAAeL,MAAf","sourcesContent":["import React from 'react'\r\nimport styles from './Burger.css'\r\nimport BurgerIngredients from './BurgerIngredients/BurgerIngredients';\r\n\r\n\r\nconst Burger = (props) => {\r\n    console.log(props.ingredients)\r\n    let transformedArray = Object.keys(props.ingredients)\r\n    .map(ingkey =>{\r\n        return [...Array(props.ingredients[ingkey])]})\r\n        \r\n\r\n    // .map( ( _ , index ) =>{ \r\n    //     return <BurgerIngredients key={ingkey + index} type={ingkey} />})\r\n      \r\n    // }).reduce((accumulator,curr)=>{return accumulator.concat(curr)},[])\r\n\r\n    // if (transformedArray.length===0 ){\r\n    //     transformedArray = <p>hey add some ingredients</p>\r\n    // }\r\n      \r\n\r\n    return(\r\n            <div className = {styles.Burger}>\r\n                <BurgerIngredients type = 'Bread-Top' />\r\n                {transformedArray}\r\n                <BurgerIngredients type = 'Bread-Bottom' />\r\n            </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Burger"]},"metadata":{},"sourceType":"module"}